[{"/Users/Jun/Documents/FE projects/market-place/src/components/MarketList.js":"1","/Users/Jun/Documents/FE projects/market-place/src/components/NewMarket.js":"2","/Users/Jun/Documents/FE projects/market-place/src/components/Navbar.js":"3","/Users/Jun/Documents/FE projects/market-place/src/aws-exports.js":"4","/Users/Jun/Documents/FE projects/market-place/src/graphql/mutations.js":"5","/Users/Jun/Documents/FE projects/market-place/src/pages/MarketPage.js":"6","/Users/Jun/Documents/FE projects/market-place/src/App.js":"7","/Users/Jun/Documents/FE projects/market-place/src/graphql/subscriptions.js":"8","/Users/Jun/Documents/FE projects/market-place/src/components/NewProduct.js":"9","/Users/Jun/Documents/FE projects/market-place/src/index.js":"10","/Users/Jun/Documents/FE projects/market-place/src/pages/ProfilePage.js":"11","/Users/Jun/Documents/FE projects/market-place/src/utils/index.js":"12","/Users/Jun/Documents/FE projects/market-place/src/graphql/queries.js":"13","/Users/Jun/Documents/FE projects/market-place/src/components/Product.js":"14","/Users/Jun/Documents/FE projects/market-place/src/components/PayButton.js":"15","/Users/Jun/Documents/FE projects/market-place/src/components/ProductSearchInput.js":"16","/Users/Jun/Documents/FE projects/market-place/src/components/ProductList.js":"17","/Users/Jun/Documents/FE projects/market-place/src/pages/ProductListPage.js":"18","/Users/Jun/Documents/FE projects/market-place/src/components/OrderCard.js":"19","/Users/Jun/Documents/FE projects/market-place/src/components/MarketCard.js":"20","/Users/Jun/Documents/FE projects/market-place/src/pages/MarketListPage.js":"21","/Users/Jun/Documents/FE projects/market-place/src/pages/LandingPage.js":"22"},{"size":491,"mtime":1609876524441,"results":"23","hashOfConfig":"24"},{"size":3639,"mtime":1610169077400,"results":"25","hashOfConfig":"24"},{"size":1449,"mtime":1609918200486,"results":"26","hashOfConfig":"24"},{"size":1260,"mtime":1610176257199,"results":"27","hashOfConfig":"24"},{"size":6057,"mtime":1609897102108,"results":"28","hashOfConfig":"24"},{"size":6533,"mtime":1610493725837,"results":"29","hashOfConfig":"24"},{"size":4218,"mtime":1610611142086,"results":"30","hashOfConfig":"24"},{"size":2707,"mtime":1609897102182,"results":"31","hashOfConfig":"24"},{"size":4890,"mtime":1609311455980,"results":"32","hashOfConfig":"24"},{"size":653,"mtime":1607640596323,"results":"33","hashOfConfig":"24"},{"size":5426,"mtime":1609917780299,"results":"34","hashOfConfig":"24"},{"size":885,"mtime":1609280895644,"results":"35","hashOfConfig":"24"},{"size":3513,"mtime":1609897101982,"results":"36","hashOfConfig":"24"},{"size":7566,"mtime":1610174508762,"results":"37","hashOfConfig":"24"},{"size":3341,"mtime":1610174551087,"results":"38","hashOfConfig":"24"},{"size":743,"mtime":1609294186480,"results":"39","hashOfConfig":"24"},{"size":435,"mtime":1609491985094,"results":"40","hashOfConfig":"24"},{"size":3187,"mtime":1609922922048,"results":"41","hashOfConfig":"24"},{"size":1275,"mtime":1609866085966,"results":"42","hashOfConfig":"24"},{"size":1064,"mtime":1609894073741,"results":"43","hashOfConfig":"24"},{"size":4653,"mtime":1610059427117,"results":"44","hashOfConfig":"24"},{"size":905,"mtime":1610579319879,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1hnzflb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Jun/Documents/FE projects/market-place/src/components/MarketList.js",[],["101","102"],"/Users/Jun/Documents/FE projects/market-place/src/components/NewMarket.js",["103","104","105"],"import React, { useState, useContext, useEffect } from \"react\";\nimport {\n\tButton,\n\tIcon,\n\tDialog,\n\tForm,\n\tInput,\n\tNotification,\n\tSelect,\n} from \"element-react\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createMarket } from \"../graphql/mutations\";\nimport { UserContext } from \"../App\";\n\nconst TAGS = [\"Food\", \"Clothing\", \"Eletronics\", \"Book\", \"Office\"];\n\nexport default function NewMarket(props) {\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\tconst [marketName, setMarketName] = useState(\"\");\n\tconst user = useContext(UserContext);\n\tconst [tagsSelected, setTagsSelected] = useState([]);\n\n\tfunction handleCloseDialog() {\n\t\tsetIsDialogOpen(false);\n\t}\n\n\t/* graphql operation for creating market */\n\tasync function handleCreateMarket(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(user);\n\t\tconst userId = user.user.attributes.sub;\n\t\tlet mutationInput = {\n\t\t\tname: marketName,\n\t\t\towner: userId,\n\t\t\ttags: tagsSelected,\n\t\t};\n\t\ttry {\n\t\t\t// debugger;\n\t\t\tconst result = await API.graphql(\n\t\t\t\t{\n\t\t\t\t\tquery: createMarket,\n\t\t\t\t\tvariables: { input: mutationInput },\n\t\t\t\t}\n\t\t\t\t// graphqlOperation(createMarket, { input: mutationInput })\n\t\t\t);\n\t\t\tconsole.log(result);\n\t\t\tsetMarketName(\"\");\n\t\t\tsetTagsSelected([]);\n\t\t\tsetIsDialogOpen(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tconsole.dir(err.message);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Error occurred trying to add market\",\n\t\t\t\tduration: 3000,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleTagSelect(selectedTag) {\n\t\tsetTagsSelected(selectedTag);\n\t}\n\n\tfunction handleSearchInputChange(input) {\n\t\tprops.setSearchTerm(input);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"market-header\">\n\t\t\t\t<h1 className=\"market-title\">Add Your Market</h1>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonClick={() => setIsDialogOpen(true)}\n\t\t\t\t\tclassName=\"market-add-button\"\n\t\t\t\t>\n\t\t\t\t\t<AiFillPlusCircle size=\"3em\" color=\"orange\" />\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<Form inline={true} className=\"market-search-bar\">\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={props.searchTerm}\n\t\t\t\t\t\tonChange={handleSearchInputChange}\n\t\t\t\t\t\tplaceholder=\"search markets by name or tag\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={props.handleSearchSubmit}\n\t\t\t\t\t\tloading={props.isSearchLoading}\n\t\t\t\t\t\tdisabled={props.searchTerm === \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\n\t\t\t<Dialog\n\t\t\t\ttitle=\"Add new market\"\n\t\t\t\tvisible={isDialogOpen}\n\t\t\t\tonCancel={handleCloseDialog}\n\t\t\t\tcloseOnPressEscape={true}\n\t\t\t\ttop=\"30%\"\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<Form\n\t\t\t\t\t\t// onSubmit={(event) => {\n\t\t\t\t\t\t// \tevent.preventDefault();\n\t\t\t\t\t\t// \tconsole.log(\"here\");\n\t\t\t\t\t\t// }}\n\t\t\t\t\t\tonSubmit={handleCreateMarket}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item label=\"New Market Name\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Market Name\"\n\t\t\t\t\t\t\t\ttrim={true}\n\t\t\t\t\t\t\t\tonChange={(name) => setMarketName(name)}\n\t\t\t\t\t\t\t\tvalue={marketName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Add tags\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={tagsSelected}\n\t\t\t\t\t\t\t\tfilterable={true}\n\t\t\t\t\t\t\t\tmultiple={true}\n\t\t\t\t\t\t\t\tonChange={handleTagSelect}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{TAGS.map((tag) => (\n\t\t\t\t\t\t\t\t\t<Select.Option key={tag} value={tag} label={tag} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</Dialog.Body>\n\t\t\t\t<Dialog.Footer>\n\t\t\t\t\t<Button onClick={handleCloseDialog}>Cancel</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tdisabled={!marketName}\n\t\t\t\t\t\tonClick={handleCreateMarket}\n\t\t\t\t\t\t// nativeType=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t\t</Dialog.Footer>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n",["106","107"],"/Users/Jun/Documents/FE projects/market-place/src/components/Navbar.js",["108","109"],"import React from \"react\";\nimport { Menu, Icon, Button } from \"element-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FaSellsy } from \"react-icons/fa\";\nimport { MdSettings } from \"react-icons/md\";\n\nexport default function Navbar({ user, handleSignOut }) {\n\treturn (\n\t\t<Menu mode=\"horizontal\" theme=\"dark\" defaultActive=\"1\">\n\t\t\t<div className=\"nav-container\">\n\t\t\t\t<div className=\"nav-links\">\n\t\t\t\t\t<Menu.Item index=\"1\">\n\t\t\t\t\t\t<NavLink to=\"/\" className=\"nav-link\">\n\t\t\t\t\t\t\t<FaSellsy color=\"orange\" size=\"2em\" />\n\t\t\t\t\t\t\t<span className=\"app-name\">Market Place</span>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<NavLink to=\"/markets\">\n\t\t\t\t\t\t<Menu.Item index=\"2\">\n\t\t\t\t\t\t\t<span className=\"markets\">Markets</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink to=\"/\">\n\t\t\t\t\t\t<Menu.Item index=\"3\">\n\t\t\t\t\t\t\t<span className=\"products\">Products</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"nav-items\">\n\t\t\t\t\t<Menu.SubMenu\n\t\t\t\t\t\tindex=\"4\"\n\t\t\t\t\t\ttitle={user.username}\n\t\t\t\t\t\tclassName=\"nav-sub-menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu.Item index=\"4-1\">\n\t\t\t\t\t\t\t{/* <Button type=\"warning\" onClick={handleSignOut}> */}\n\t\t\t\t\t\t\t<span onClick={handleSignOut}>Sign Out</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu.SubMenu>\n\t\t\t\t\t<span className=\"greeting\"> </span>\n\t\t\t\t\t<NavLink to=\"/profile\">\n\t\t\t\t\t\t<Menu.Item index=\"5\">\n\t\t\t\t\t\t\t<MdSettings size=\"1.4em\" />\n\t\t\t\t\t\t\t<span>Profile</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Menu>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/aws-exports.js",[],["110","111"],"/Users/Jun/Documents/FE projects/market-place/src/graphql/mutations.js",[],["112","113"],"/Users/Jun/Documents/FE projects/market-place/src/pages/MarketPage.js",["114","115","116","117","118","119","120","121"],"/Users/Jun/Documents/FE projects/market-place/src/App.js",["122","123","124","125","126","127"],"/Users/Jun/Documents/FE projects/market-place/src/graphql/subscriptions.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/NewProduct.js",["128","129","130","131"],"// import { AmplifyPhotoPicker } from \"@aws-amplify/ui-react\";\nimport { PhotoPicker } from \"aws-amplify-react\";\nimport {\n\tButton,\n\tForm,\n\tInput,\n\tNotification,\n\tRadio,\n\tProgress,\n} from \"element-react\";\nimport React, { useRef, useState } from \"react\";\nimport { API, Auth, graphqlOperation, Storage } from \"aws-amplify\";\nimport { createProduct } from \"../graphql/mutations\";\nimport awsExports from \"../aws-exports\";\nimport { convertDollarsToCents } from \"../utils\";\n\nexport default function NewProduct({ marketId }) {\n\tconst [productName, setProductName] = useState(\"\");\n\tconst [description, setDescription] = useState(\"\");\n\tconst [price, setPrice] = useState();\n\tconst [isShipped, setIsShipped] = useState();\n\tconst [imageFile, setImageFile] = useState();\n\tconst [isUploading, setIsUploading] = useState(false);\n\tconst photoPicker = useRef(null);\n\tconst [uploadProgress, setUploadProgress] = useState();\n\t// todo: progress bar\n\n\tfunction handleProductNameChange(value) {\n\t\tsetProductName(value);\n\t}\n\n\tfunction handleDescriptionChange(value) {\n\t\tsetDescription(value);\n\t}\n\n\tfunction handlePriceChange(value) {\n\t\tsetPrice(value);\n\t}\n\n\tfunction handleRadioChange(value) {\n\t\tsetIsShipped(Boolean(value === \"Shipped\"));\n\t}\n\n\tasync function handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsUploading(true);\n\n\t\ttry {\n\t\t\t/* 给image file命名 */\n\t\t\t// const visibility = \"public\";\n\t\t\tconst { identityId } = await Auth.currentCredentials();\n\t\t\t// const fileName = `/${visibility}/${identityId}/${Date.now()}-${\n\t\t\t// \timageFile.name\n\t\t\t// }`;\n\t\t\tconst fileName = `${identityId}/${Date.now()}-${imageFile.name}`;\n\t\t\t/* upload image file to S3 */\n\t\t\t// console.log(imageFile);\n\t\t\tconst uploadedFile = await Storage.put(fileName, imageFile, {\n\t\t\t\tcontentType: imageFile.type,\n\t\t\t});\n\t\t\t// console.log(uploadedFile);\n\t\t\t/* S3 object */\n\t\t\tconst S3Object = {\n\t\t\t\tkey: uploadedFile.key,\n\t\t\t\tregion: awsExports.aws_user_files_s3_bucket_region,\n\t\t\t\tbucket: awsExports.aws_user_files_s3_bucket,\n\t\t\t};\n\t\t\t/* graphql: createProduct */\n\t\t\tconst newProduct = await API.graphql(\n\t\t\t\tgraphqlOperation(createProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname: productName,\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tfile: S3Object,\n\t\t\t\t\t\tprice: convertDollarsToCents(price),\n\t\t\t\t\t\tmarketID: marketId,\n\t\t\t\t\t\tshipped: isShipped,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\t// console.log(newProduct);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success!\",\n\t\t\t\tmessage: \"Added New Product\",\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t} finally {\n\t\t\t/* try: 看看视觉上，button的loading状态的取消是不是和notification的出现是同时的 */\n\t\t\tsetProductName(\"\");\n\t\t\tsetDescription(\"\");\n\t\t\tsetPrice();\n\t\t\tsetIsShipped();\n\t\t\tsetImageFile();\n\t\t\tphotoPicker.current.state.previewSrc = undefined;\n\t\t\tsetIsUploading(false);\n\t\t}\n\t}\n\n\tfunction handleImagePick(image) {\n\t\t// console.log(image);\n\t\tsetImageFile(image.file);\n\t}\n\n\treturn (\n\t\t<div className=\"new-product-form\">\n\t\t\t<h3>ADD NEW PRODUCT</h3>\n\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t<Form.Item label=\"Product Name\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={productName}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"product name\"\n\t\t\t\t\t\tonChange={handleProductNameChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Product Description\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Product Price\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Price ($USD)\"\n\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\tonChange={handlePriceChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Is the Product Shipped or Emailed to the Customer?\">\n\t\t\t\t\t{/* <Radio.Group onChange> */}\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tchecked={isShipped === true}\n\t\t\t\t\t\tvalue=\"Shipped\"\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tShipped\n\t\t\t\t\t</Radio>\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tchecked={isShipped === false}\n\t\t\t\t\t\tvalue=\"Emailed\"\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tEmailed\n\t\t\t\t\t</Radio>\n\t\t\t\t\t{/* </Radio.Group> */}\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Upload Product Image\">\n\t\t\t\t\t<PhotoPicker\n\t\t\t\t\t\tref={photoPicker}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\tsectionHeader: {\n\t\t\t\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformContainer: {\n\t\t\t\t\t\t\t\tmargin: \"0\",\n\t\t\t\t\t\t\t\tpadding: \"0.2em\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpreview=\"show\"\n\t\t\t\t\t\t// onLoad={(param) => console.log(param)}\n\t\t\t\t\t\tonPick={handleImagePick}\n\t\t\t\t\t\t// onPick={(file) => console.log(file)}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t{/* {console.log(description, price, isShipped, imageFile, isShipped)} */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t!productName ||\n\t\t\t\t\t\t\t!description ||\n\t\t\t\t\t\t\t!price ||\n\t\t\t\t\t\t\tisShipped === undefined ||\n\t\t\t\t\t\t\t!imageFile ||\n\t\t\t\t\t\t\tisUploading\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={handleFormSubmit}\n\t\t\t\t\t\tloading={isUploading}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Product\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/index.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/ProfilePage.js",["132"],"import React, { useEffect, useState } from \"react\";\nimport { Loading, Table, Tabs } from \"element-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { COMPARE_NOTES_CREATEDTIME_ASCENDING } from \"../utils\";\nimport { SiMarketo } from \"react-icons/si\";\nimport OrderCard from \"../components/OrderCard\";\nimport { listProducts } from \"../graphql/queries\";\nimport ProductList from \"../components/ProductList\";\nimport MarketList from \"../components/MarketList\";\n\nconst getUserQuery = /* GraphQL */ `\n\tquery GetUser($id: ID!) {\n\t\tgetUser(id: $id) {\n\t\t\temail\n\t\t\tusername\n\t\t\torders(sortDirection: DESC) {\n\t\t\t\titems {\n\t\t\t\t\tid\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\towner\n\t\t\t\t\t\tprice\n\t\t\t\t\t\tshipped\n\t\t\t\t\t\tmarket {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfile {\n\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tshippingAddress {\n\t\t\t\t\t\taddress_line1\n\t\t\t\t\t\taddress_state\n\t\t\t\t\t\taddress_zip\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tcountry\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\n/* the query provided by codegen does not query products item  */\nconst listMarkets = /* GraphQL */ `\n\tquery ListMarkets(\n\t\t$filter: ModelMarketFilterInput\n\t\t$limit: Int\n\t\t$nextToken: String\n\t) {\n\t\tlistMarkets(filter: $filter, limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\ttags\n\t\t\t\towner\n\t\t\t\tcreatedAt\n\t\t\t\tproducts {\n\t\t\t\t\titems {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tupdatedAt\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\n\nexport default function ProfilePage({ cognitoUser }) {\n\tconst [userInfo, setUserInfo] = useState();\n\tconst [userMarketList, setUserMarketList] = useState();\n\tconst [userProductList, setUserProductList] = useState();\n\tconsole.log(cognitoUser);\n\n\t/* columns for <Table /> */\n\tconst columns = [\n\t\t{\n\t\t\tprop: \"name\",\n\t\t\t// width: 200,\n\t\t},\n\t\t{\n\t\t\tprop: \"value\",\n\t\t\t// width: 400,\n\t\t},\n\t];\n\n\t/* Effect Hook */\n\tuseEffect(() => {\n\t\tgetUserInfo();\n\t\tgetUserProducts();\n\t\tgetUserMarkets();\n\t}, [cognitoUser]);\n\n\tasync function getUserInfo() {\n\t\tif (cognitoUser && cognitoUser.attributes.sub) {\n\t\t\ttry {\n\t\t\t\tconst result = await API.graphql(\n\t\t\t\t\tgraphqlOperation(getUserQuery, {\n\t\t\t\t\t\tid: cognitoUser.attributes.sub,\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\t// console.log(result.data.getUser);\n\t\t\t\tsetUserInfo(result.data.getUser);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(`Error fetching User information`, err);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function getUserProducts() {\n\t\tif (cognitoUser && cognitoUser.attributes.sub) {\n\t\t\ttry {\n\t\t\t\tconst result = await API.graphql(\n\t\t\t\t\tgraphqlOperation(listProducts, {\n\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\towner: {\n\t\t\t\t\t\t\t\teq: cognitoUser.attributes.sub,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tsetUserProductList(result.data.listProducts.items);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(`Error fetching user's products`);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function getUserMarkets() {\n\t\tif (cognitoUser && cognitoUser.attributes.sub) {\n\t\t\ttry {\n\t\t\t\tconst result = await API.graphql(\n\t\t\t\t\tgraphqlOperation(listMarkets, {\n\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\towner: {\n\t\t\t\t\t\t\t\teq: cognitoUser.attributes.sub,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tsetUserMarketList(\n\t\t\t\t\tresult.data.listMarkets.items.sort(\n\t\t\t\t\t\tCOMPARE_NOTES_CREATEDTIME_ASCENDING\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(`Error fetching user's markets`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{console.log(userMarketList)}\n\t\t\t<Tabs type=\"card\" className=\"profile-page\">\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tclassName=\"summary tab\"\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<i className=\"el-icon-information\"></i>\n\t\t\t\t\t\t\t<span>Account</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"1\"\n\t\t\t\t>\n\t\t\t\t\t<h3>ACCOUNT SUMMARY</h3>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName=\"user-profile-table\"\n\t\t\t\t\t\tstripe={true}\n\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tborder={true}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ name: \"Your Id\", value: cognitoUser.attributes.sub },\n\t\t\t\t\t\t\t{ name: \"Username\", value: cognitoUser.username },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"Your Email\",\n\t\t\t\t\t\t\t\tvalue: cognitoUser.attributes.email,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"Phone Number\",\n\t\t\t\t\t\t\t\tvalue: cognitoUser.attributes.phone_number,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Tabs.Pane>\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<SiMarketo />\n\t\t\t\t\t\t\t<span>My Markets</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"2\"\n\t\t\t\t\tclassName=\"markets-tab\"\n\t\t\t\t>\n\t\t\t\t\t<Loading text=\"Loading...\" loading={!userMarketList}>\n\t\t\t\t\t\t{userMarketList && userMarketList.length > 0 ? (\n\t\t\t\t\t\t\t<MarketList markets={userMarketList} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h3>You haven't created any market yet.</h3>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Loading>\n\t\t\t\t\t{/* {userMarketList ? (\n\t\t\t\t\t\t<MarketList markets={userMarketList} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h3>Loading...</h3>\n\t\t\t\t\t)} */}\n\t\t\t\t</Tabs.Pane>\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<i className=\"el-icon-menu\" />\n\t\t\t\t\t\t\t<span>My Products</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"3\"\n\t\t\t\t\tclassName=\"products-tab\"\n\t\t\t\t>\n\t\t\t\t\t<Loading text=\"Loading...\" loading={!userProductList}>\n\t\t\t\t\t\t{userProductList && userProductList.length > 0 ? (\n\t\t\t\t\t\t\t<ProductList products={userProductList} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h3>You haven't post any product yet.</h3>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Loading>\n\t\t\t\t</Tabs.Pane>\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tclassName=\"orders\"\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<i className=\"el-icon-document\"></i>\n\t\t\t\t\t\t\t<span>Orders</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"4\"\n\t\t\t\t>\n\t\t\t\t\t{userInfo && userInfo.orders.items.length > 0 ? (\n\t\t\t\t\t\tuserInfo.orders.items\n\t\t\t\t\t\t\t.sort(COMPARE_NOTES_CREATEDTIME_ASCENDING)\n\t\t\t\t\t\t\t.map((order) => <OrderCard key={order.id} order={order} />)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h3>You haven't placed any order yet.</h3>\n\t\t\t\t\t)}\n\t\t\t\t</Tabs.Pane>\n\t\t\t</Tabs>\n\t\t</>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/utils/index.js",[],"/Users/Jun/Documents/FE projects/market-place/src/graphql/queries.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/Product.js",["133","134"],"import { S3Image } from \"aws-amplify-react\";\nimport {\n\tButton,\n\tCard,\n\tDialog,\n\tForm,\n\tInput,\n\tRadio,\n\tNotification,\n\tMessageBox,\n\tLoading,\n} from \"element-react\";\nimport React, { useContext, useState } from \"react\";\nimport PayButton from \"./PayButton\";\nimport { UserContext } from \"../App\";\nimport { convertCentsToDollars, convertDollarsToCents } from \"../utils\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { deleteProduct, updateProduct } from \"../graphql/mutations\";\n\nexport default function Product({ product }) {\n\tconst user = useContext(UserContext);\n\tconst [isOwner, setIsOwner] = useState(\n\t\tproduct.owner === user.user.attributes.sub\n\t);\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\tconst [productName, setProductName] = useState(product.name);\n\tconst [description, setDescription] = useState(product.description);\n\tconst [price, setPrice] = useState(convertCentsToDollars(product.price));\n\tconst [isShipped, setIsShipped] = useState(product.shipped);\n\tconst [isUpdating, setIsUpdating] = useState(false);\n\tconst [shouldShowProductDetail, setShouldShowProductDetail] = useState(false);\n\t// const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n\tfunction handleProductNameChange(value) {\n\t\tsetProductName(value);\n\t}\n\n\tfunction handleDescriptionChange(value) {\n\t\tsetDescription(value);\n\t}\n\n\tfunction handlePriceChange(value) {\n\t\tsetPrice(value);\n\t}\n\n\tfunction handleRadioChange(value) {\n\t\tsetIsShipped(Boolean(value === \"Shipped\"));\n\t}\n\n\tasync function handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsUpdating(true);\n\t\ttry {\n\t\t\tconst updateResult = await API.graphql(\n\t\t\t\tgraphqlOperation(updateProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname: productName,\n\t\t\t\t\t\tid: product.id,\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tprice: convertDollarsToCents(price),\n\t\t\t\t\t\tshipped: isShipped,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(updateResult);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success\",\n\t\t\t\tmessage: \"Updated Product!\",\n\t\t\t});\n\t\t\tsetIsDialogOpen(false);\n\t\t\tsetIsUpdating(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Update Product\",\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction closeDialog() {\n\t\tsetIsDialogOpen(false);\n\t}\n\n\tfunction handleDelete() {\n\t\tMessageBox.confirm(\n\t\t\t\"This will permanently delete the product. Continue?\",\n\t\t\t\"Confirm\",\n\t\t\t{\n\t\t\t\tconfirmButtonText: \"Delete\",\n\t\t\t\tconfirmButtonClass: \"danger\",\n\t\t\t\tcancelButtonText: \"Cancel\",\n\t\t\t\ttype: \"warning\",\n\t\t\t}\n\t\t)\n\t\t\t.then(() => {\n\t\t\t\tdeleteProductOperation();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tasync function deleteProductOperation() {\n\t\ttry {\n\t\t\tconst deleteResult = await API.graphql(\n\t\t\t\tgraphqlOperation(deleteProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tid: product.id,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(deleteResult);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success\",\n\t\t\t\tmessage: \"Deleted Product\",\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Delete Product\",\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction showProductDetail() {\n\t\tsetShouldShowProductDetail(true);\n\t}\n\n\tfunction hideProductDetail() {\n\t\t// debugger;\n\t\tsetShouldShowProductDetail(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"product-card\">\n\t\t\t\t<Card\n\t\t\t\t\tbodyStyle={{\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<S3Image\n\t\t\t\t\t\tonClick={showProductDetail}\n\t\t\t\t\t\timgKey={product.file.key}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\tphotoImg: {\n\t\t\t\t\t\t\t\twidth: \"18vw\",\n\t\t\t\t\t\t\t\theight: \"24vw\",\n\t\t\t\t\t\t\t\tobjectFit: \"cover\",\n\t\t\t\t\t\t\t\tminWidth: \"14em\",\n\t\t\t\t\t\t\t\tminHeight: \"18em\",\n\t\t\t\t\t\t\t\tmaxWidth: \"18em\",\n\t\t\t\t\t\t\t\tmaxHeight: \"24em\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"product-card-content\" onClick={showProductDetail}>\n\t\t\t\t\t\t<div className=\"product-name\">\n\t\t\t\t\t\t\t<strong>{product.name}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"description\">{product.description}</div> */}\n\t\t\t\t\t\t<div className=\"shipped\">\n\t\t\t\t\t\t\t<i className=\"el-icon-message\" />\n\t\t\t\t\t\t\t{product.shipped ? \"Deliver\" : \"Email\"}\n\t\t\t\t\t\t\t<div className=\"price\">\n\t\t\t\t\t\t\t\t${convertCentsToDollars(product.price)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</div>\n\n\t\t\t{/* dialog to see product detail */}\n\t\t\t<Dialog\n\t\t\t\ttop=\"5%\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tvisible={shouldShowProductDetail}\n\t\t\t\tonCancel={hideProductDetail}\n\t\t\t\tlockScroll={false}\n\t\t\t\tcustomClass=\"product-detail-dialog\"\n\t\t\t>\n\t\t\t\t<Dialog.Body className=\"product-detail-dialog-body\">\n\t\t\t\t\t<div className=\"image-wrapper\">\n\t\t\t\t\t\t<S3Image\n\t\t\t\t\t\t\timgKey={product.file.key}\n\t\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\t\tphotoImg: {\n\t\t\t\t\t\t\t\t\t// width: \"100%\",\n\t\t\t\t\t\t\t\t\t// flexGrow: 1,\n\t\t\t\t\t\t\t\t\tmaxHeight: \"40em\",\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t// maxWidth: \"50%\",\n\t\t\t\t\t\t\t\t\tobjectFit: \"contain\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"product-detail-content\">\n\t\t\t\t\t\t<span className=\"product-name\">{product.name}</span>\n\t\t\t\t\t\t<div className=\"product-detail-seond-line\">\n\t\t\t\t\t\t\t<span className=\"product-price\">{`$${convertCentsToDollars(\n\t\t\t\t\t\t\t\tproduct.price\n\t\t\t\t\t\t\t)}`}</span>\n\t\t\t\t\t\t\t<div className=\"shipped\">\n\t\t\t\t\t\t\t\t<i className=\"el-icon-message\" />\n\t\t\t\t\t\t\t\tShip via:\n\t\t\t\t\t\t\t\t{product.shipped ? \"Deliver\" : \"Email\"}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className=\"product-description\">{product.description}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Dialog.Body>\n\t\t\t\t<Dialog.Footer>\n\t\t\t\t\t{isOwner ? (\n\t\t\t\t\t\t<div className=\"owner-buttons\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thideProductDetail();\n\t\t\t\t\t\t\t\t\tsetIsDialogOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button type=\"danger\" icon=\"delete\" onClick={handleDelete} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"pay-button\">\n\t\t\t\t\t\t\t<PayButton\n\t\t\t\t\t\t\t\tproduct={product}\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\t// setIsProcessingPayment={setIsProcessingPayment}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Dialog.Footer>\n\t\t\t</Dialog>\n\t\t\t{/* dialog to edit product */}\n\t\t\t<Dialog\n\t\t\t\ttitle=\"Edit Product\"\n\t\t\t\tvisible={isDialogOpen}\n\t\t\t\tonCancel={closeDialog}\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Form.Item label=\"Product Name\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={productName}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"product name\"\n\t\t\t\t\t\t\t\tonChange={handleProductNameChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Update Product Description\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Update Product Price\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tplaceholder=\"Price ($USD)\"\n\t\t\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\t\t\tonChange={handlePriceChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Is the Product Shipped or Emailed to the Customer?\">\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tchecked={isShipped === true}\n\t\t\t\t\t\t\t\tvalue=\"Shipped\"\n\t\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShipped\n\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tchecked={isShipped === false}\n\t\t\t\t\t\t\t\tvalue=\"Emailed\"\n\t\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEmailed\n\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item className=\"dialog-buttons\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t!description ||\n\t\t\t\t\t\t\t\t\t!price ||\n\t\t\t\t\t\t\t\t\tisShipped === undefined ||\n\t\t\t\t\t\t\t\t\tisUpdating\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={handleFormSubmit}\n\t\t\t\t\t\t\t\tloading={isUpdating}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={closeDialog}>Cancel</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</Dialog.Body>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/components/PayButton.js",["135","136"],"import { API, graphqlOperation } from \"aws-amplify\";\nimport { Loading, Message, Notification } from \"element-react\";\nimport React, { useState } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { createOrder } from \"../graphql/mutations\";\n// import { IsLoadingContext } from \"../pages/MarketPage\";\nimport { getUser } from \"../graphql/queries\";\nimport { browserHistory } from \"../App\";\n\nconst stripeConfig = {\n\tcurrency: \"USD\",\n\tpublishableAPIKey:\n\t\t\"pk_test_51I0kZJHO14SglYyweDsZ0166SNqMHKjaWQnKS9Px3shOxp7KL1LCzVs2k8lxO5uSr77Y810hP23At0qacJr5r4qT00YIZoldhM\",\n};\n\nexport default function PayButton({ product, user }) {\n\tasync function getProductOwner() {\n\t\ttry {\n\t\t\tconst result = await API.graphql(\n\t\t\t\tgraphqlOperation(getUser, {\n\t\t\t\t\tid: product.owner,\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn result.data.getUser.email;\n\t\t} catch (err) {\n\t\t\tconsole.error(`Error fetching product owener`, err);\n\t\t}\n\t}\n\n\tasync function handleToken(token) {\n\t\tconst productOwnerEmail = await getProductOwner();\n\t\tconsole.log(productOwnerEmail);\n\t\tconsole.log(token);\n\t\t// setIsProcessingPayment(true);\n\t\ttry {\n\t\t\tconst result = await API.post(\"orderprocessor\", \"/charge\", {\n\t\t\t\tbody: {\n\t\t\t\t\ttoken,\n\t\t\t\t\tcharge: {\n\t\t\t\t\t\tcurrency: stripeConfig.currency,\n\t\t\t\t\t\tamount: product.price,\n\t\t\t\t\t\tdescription: product.description,\n\t\t\t\t\t\tproductOwnerEmail,\n\t\t\t\t\t\tshipped: product.shipped,\n\t\t\t\t\t\tcustomerEmail: user.user.attributes.email,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (result && result.charge.status === `succeeded`) {\n\t\t\t\t/* create order: graphql operation */\n\t\t\t\tconst shippingAddress = product.shipped\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tcity: result.charge.source.address_city,\n\t\t\t\t\t\t\tcountry: result.charge.source.address_country,\n\t\t\t\t\t\t\taddress_line1: result.charge.source.address_line1,\n\t\t\t\t\t\t\t// address_line2: result.charge.source.address_line2,\n\t\t\t\t\t\t\taddress_state: result.charge.source.address_state,\n\t\t\t\t\t\t\taddress_zip: result.charge.source.address_zip,\n\t\t\t\t\t  }\n\t\t\t\t\t: null;\n\n\t\t\t\tconst createOrderResult = await API.graphql(\n\t\t\t\t\tgraphqlOperation(createOrder, {\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\torderProductId: product.id,\n\t\t\t\t\t\t\tuserID: user.user.attributes.sub,\n\t\t\t\t\t\t\tshippingAddress,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tconsole.log(createOrderResult);\n\t\t\t\t// setIsProcessingPayment(false);\n\t\t\t\tNotification.success({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\tmessage: \"Purchase Success!\",\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbrowserHistory.push(\"/\");\n\t\t\t\t\tMessage({\n\t\t\t\t\t\tmessage: \"Check your verified email for order details\",\n\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\tshowClose: true,\n\t\t\t\t\t});\n\t\t\t\t}, 3000);\n\t\t\t} else {\n\t\t\t\tNotification.error({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\tmessage: \"Failed to Process Payment\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconsole.log(result);\n\t\t} catch (err) {\n\t\t\tconsole.error(`Error Handling Payment`, err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Process Payment\",\n\t\t\t});\n\t\t} finally {\n\t\t\t// setIsLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t// <Loading\n\t\t// \tloading={false}\n\t\t// \tfullscreen={true}\n\t\t// \ttext=\"Processing your payment...\"\n\t\t// >\n\t\t<StripeCheckout\n\t\t\ttoken={handleToken}\n\t\t\tname={product.description}\n\t\t\temail={user.user.attributes.email}\n\t\t\tamount={product.price}\n\t\t\tshippingAddress={product.shipped}\n\t\t\tbillingAddress={product.shipped}\n\t\t\talipay={true}\n\t\t\tlocale=\"auto\"\n\t\t\tcurrency={stripeConfig.currency}\n\t\t\tstripeKey={stripeConfig.publishableAPIKey}\n\t\t/>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/components/ProductSearchInput.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/ProductList.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/ProductListPage.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/OrderCard.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/MarketCard.js",["137"],"import { Card, Tag } from \"element-react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { browserHistory } from \"../App\";\n\nconst cardBodyStyle = {\n\tdisplay: \"flex\",\n\tflexDirection: \"row\",\n\tjustifyContent: \"space-between\",\n\t// backgroundColor: \"rgba(233, 243, 254, 0.4)\",\n};\n\nexport default function MarketCard({ market }) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"market-list-item\"\n\t\t\tonClick={() => {\n\t\t\t\tbrowserHistory.push(`/markets/${market.id}`);\n\t\t\t\tconsole.log(\"clicked\");\n\t\t\t}}\n\t\t>\n\t\t\t{/* <Link to={`/markets/${market.id}`}> */}\n\t\t\t<Card bodyStyle={cardBodyStyle}>\n\t\t\t\t<div className=\"market-list-item-left\">\n\t\t\t\t\t<span className=\"market-list-item-marketname\">{market.name}</span>\n\t\t\t\t\t<span className=\"market-list-item-product\">\n\t\t\t\t\t\t{`${market.products.items.length} products`}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"market-list-item-right\">\n\t\t\t\t\t{market.tags &&\n\t\t\t\t\t\tmarket.tags.map((tag) => (\n\t\t\t\t\t\t\t<Tag type=\"danger\" key={tag}>\n\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t\t{/* </Link> */}\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/pages/MarketListPage.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/LandingPage.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":39,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"147","line":4,"column":2,"nodeType":"145","messageId":"146","endLine":4,"endColumn":6},{"ruleId":"143","severity":1,"message":"148","line":12,"column":15,"nodeType":"145","messageId":"146","endLine":12,"endColumn":31},{"ruleId":"139","replacedBy":"149"},{"ruleId":"141","replacedBy":"150"},{"ruleId":"143","severity":1,"message":"147","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":20},{"ruleId":"143","severity":1,"message":"151","line":2,"column":22,"nodeType":"145","messageId":"146","endLine":2,"endColumn":28},{"ruleId":"139","replacedBy":"152"},{"ruleId":"141","replacedBy":"153"},{"ruleId":"139","replacedBy":"154"},{"ruleId":"141","replacedBy":"155"},{"ruleId":"143","severity":1,"message":"156","line":2,"column":15,"nodeType":"145","messageId":"146","endLine":2,"endColumn":19},{"ruleId":"143","severity":1,"message":"157","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":15},{"ruleId":"143","severity":1,"message":"158","line":13,"column":10,"nodeType":"145","messageId":"146","endLine":13,"endColumn":45},{"ruleId":"143","severity":1,"message":"159","line":52,"column":9,"nodeType":"145","messageId":"146","endLine":52,"endColumn":17},{"ruleId":"143","severity":1,"message":"160","line":52,"column":19,"nodeType":"145","messageId":"146","endLine":52,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":65,"column":5,"nodeType":"163","endLine":65,"endColumn":7,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":151,"column":31,"nodeType":"167","messageId":"168","endLine":151,"endColumn":33},{"ruleId":"161","severity":1,"message":"169","line":167,"column":5,"nodeType":"163","endLine":167,"endColumn":13,"suggestions":"170"},{"ruleId":"143","severity":1,"message":"171","line":4,"column":2,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"172","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":23},{"ruleId":"143","severity":1,"message":"173","line":8,"column":25,"nodeType":"145","messageId":"146","endLine":8,"endColumn":34},{"ruleId":"143","severity":1,"message":"174","line":29,"column":7,"nodeType":"145","messageId":"146","endLine":29,"endColumn":14},{"ruleId":"143","severity":1,"message":"175","line":42,"column":9,"nodeType":"145","messageId":"146","endLine":42,"endColumn":24},{"ruleId":"143","severity":1,"message":"176","line":92,"column":11,"nodeType":"145","messageId":"146","endLine":92,"endColumn":17},{"ruleId":"143","severity":1,"message":"177","line":9,"column":2,"nodeType":"145","messageId":"146","endLine":9,"endColumn":10},{"ruleId":"143","severity":1,"message":"178","line":25,"column":9,"nodeType":"145","messageId":"146","endLine":25,"endColumn":23},{"ruleId":"143","severity":1,"message":"179","line":25,"column":25,"nodeType":"145","messageId":"146","endLine":25,"endColumn":42},{"ruleId":"143","severity":1,"message":"180","line":69,"column":10,"nodeType":"145","messageId":"146","endLine":69,"endColumn":20},{"ruleId":"161","severity":1,"message":"181","line":95,"column":5,"nodeType":"163","endLine":95,"endColumn":18,"suggestions":"182"},{"ruleId":"143","severity":1,"message":"183","line":11,"column":2,"nodeType":"145","messageId":"146","endLine":11,"endColumn":9},{"ruleId":"143","severity":1,"message":"184","line":22,"column":18,"nodeType":"145","messageId":"146","endLine":22,"endColumn":28},{"ruleId":"143","severity":1,"message":"183","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"185","line":3,"column":17,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"186","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":9,"column":4,"nodeType":"189","endLine":9,"endColumn":48},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'graphqlOperation' is defined but never used.",["190"],["191"],"'Button' is defined but never used.",["190"],["191"],["190"],["191"],"'Auth' is defined but never used.","'Product' is defined but never used.","'COMPARE_NOTES_CREATEDTIME_ASCENDING' is defined but never used.","'tabValue' is assigned a value but never used.","'setTabValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMarket'. Either include it or remove the dependency array.","ArrayExpression",["192"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.attributes.sub'. Either include it or remove the dependency array.",["193"],"'AmplifyGreetings' is defined but never used.","'Authenticator' is defined but never used.","'Greetings' is defined but never used.","'myTheme' is assigned a value but never used.","'currentAuthUser' is assigned a value but never used.","'result' is assigned a value but never used.","'Progress' is defined but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","'newProduct' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserInfo', 'getUserMarkets', and 'getUserProducts'. Either include them or remove the dependency array.",["194"],"'Loading' is defined but never used.","'setIsOwner' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [fetchMarket]",{"range":"201","text":"202"},"Update the dependencies array to be: [market, user.attributes.sub]",{"range":"203","text":"204"},"Update the dependencies array to be: [cognitoUser, getUserInfo, getUserMarkets, getUserProducts]",{"range":"205","text":"206"},[1879,1881],"[fetchMarket]",[4548,4556],"[market, user.attributes.sub]",[1845,1858],"[cognitoUser, getUserInfo, getUserMarkets, getUserProducts]"]