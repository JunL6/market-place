[{"/Users/Jun/Documents/FE projects/market-place/src/components/MarketList.js":"1","/Users/Jun/Documents/FE projects/market-place/src/components/NewMarket.js":"2","/Users/Jun/Documents/FE projects/market-place/src/components/Navbar.js":"3","/Users/Jun/Documents/FE projects/market-place/src/aws-exports.js":"4","/Users/Jun/Documents/FE projects/market-place/src/graphql/mutations.js":"5","/Users/Jun/Documents/FE projects/market-place/src/pages/HomePage.js":"6","/Users/Jun/Documents/FE projects/market-place/src/pages/MarketPage.js":"7","/Users/Jun/Documents/FE projects/market-place/src/App.js":"8","/Users/Jun/Documents/FE projects/market-place/src/graphql/subscriptions.js":"9","/Users/Jun/Documents/FE projects/market-place/src/components/NewProduct.js":"10","/Users/Jun/Documents/FE projects/market-place/src/index.js":"11","/Users/Jun/Documents/FE projects/market-place/src/pages/ProfilePage.js":"12","/Users/Jun/Documents/FE projects/market-place/src/utils/index.js":"13","/Users/Jun/Documents/FE projects/market-place/src/graphql/queries.js":"14","/Users/Jun/Documents/FE projects/market-place/src/components/Product.js":"15","/Users/Jun/Documents/FE projects/market-place/src/components/PayButton.js":"16"},{"size":3404,"mtime":1608145577368,"results":"17","hashOfConfig":"18"},{"size":3647,"mtime":1607983832209,"results":"19","hashOfConfig":"18"},{"size":999,"mtime":1607670976628,"results":"20","hashOfConfig":"18"},{"size":1260,"mtime":1608712341110,"results":"21","hashOfConfig":"18"},{"size":5045,"mtime":1608542438326,"results":"22","hashOfConfig":"18"},{"size":1769,"mtime":1607925859373,"results":"23","hashOfConfig":"18"},{"size":6197,"mtime":1608662459307,"results":"24","hashOfConfig":"18"},{"size":1757,"mtime":1608533946579,"results":"25","hashOfConfig":"18"},{"size":2629,"mtime":1608542438390,"results":"26","hashOfConfig":"18"},{"size":4510,"mtime":1608463043458,"results":"27","hashOfConfig":"18"},{"size":653,"mtime":1607640596323,"results":"28","hashOfConfig":"18"},{"size":102,"mtime":1607410819339,"results":"29","hashOfConfig":"18"},{"size":366,"mtime":1608534299252,"results":"30","hashOfConfig":"18"},{"size":2760,"mtime":1608542438203,"results":"31","hashOfConfig":"18"},{"size":5283,"mtime":1608619014911,"results":"32","hashOfConfig":"18"},{"size":1851,"mtime":1608710493053,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1hnzflb",{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Jun/Documents/FE projects/market-place/src/components/MarketList.js",["76","77","78"],"import React, { useState, useEffect } from \"react\";\nimport { listMarkets } from \"../graphql/queries\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { Loading, Card, Tag, Notification, Icon, Button } from \"element-react\";\nimport { SiMarketo } from \"react-icons/si\";\nimport { Link } from \"react-router-dom\";\nimport { onCreateMarket } from \"../graphql/subscriptions\";\n\nfunction sortByCreatedTimeAsc(a, b) {\n\tif (new Date(a.createdAt).getTime() < new Date(b.createdAt).getTime())\n\t\treturn 1;\n\telse return -1;\n}\n\nconst cardBodyStyle = {\n\tdisplay: \"flex\",\n\tflexDirection: \"row\",\n\tjustifyContent: \"space-between\",\n\tbackgroundColor: \"rgba(233, 243, 254, 0.4)\",\n};\n\nexport default function MarketList(props) {\n\tconst [markets, setMarkets] = useState(null);\n\tconst [currentSearchTerm, setCurrentSearchTerm] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tfetchMarkets();\n\t}, []);\n\n\t/* graphql subscription for onCreateMarket */\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst createMarketSubscription = API.graphql(\n\t\t\t\tgraphqlOperation(onCreateMarket)\n\t\t\t).subscribe({\n\t\t\t\tnext: (marketData) => {\n\t\t\t\t\tconst newMarket = marketData.value.data.onCreateMarket;\n\t\t\t\t\tsetMarkets((prevMarkets) => {\n\t\t\t\t\t\treturn [...prevMarkets, newMarket].sort(sortByCreatedTimeAsc);\n\t\t\t\t\t});\n\t\t\t\t\tNotification.success({\n\t\t\t\t\t\ttitle: \"Success!\",\n\t\t\t\t\t\tmessage: \"Added new market\",\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn function cleanup() {\n\t\t\t\tcreateMarketSubscription.unsubscribe();\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}, []);\n\n\t/* graphql operatino for getting list of markets for the current user */\n\tasync function fetchMarkets() {\n\t\ttry {\n\t\t\tconst result = await API.graphql({ query: listMarkets });\n\t\t\tconsole.log(result);\n\t\t\tsetMarkets(result.data.listMarkets.items.sort(sortByCreatedTimeAsc));\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tfunction renderMarketList(markets) {\n\t\treturn (\n\t\t\t<Loading text=\"loading markets...\" loading={markets === null}>\n\t\t\t\t{markets && markets.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{markets.map((market) => (\n\t\t\t\t\t\t\t<div className=\"market-list-item\" key={market.id}>\n\t\t\t\t\t\t\t\t<Card bodyStyle={cardBodyStyle}>\n\t\t\t\t\t\t\t\t\t<div className=\"market-list-item-left\">\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={`/markets/${market.id}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"market-list-item-marketname\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span>{market.name}</span>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<span className=\"market-list-item-product\">\n\t\t\t\t\t\t\t\t\t\t\t{`${\n\t\t\t\t\t\t\t\t\t\t\t\tmarket.products.length > 0 ? market.products.length : 0\n\t\t\t\t\t\t\t\t\t\t\t} products`}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"market-list-item-right\">\n\t\t\t\t\t\t\t\t\t\t{market.tags &&\n\t\t\t\t\t\t\t\t\t\t\tmarket.tags.map((tag) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Tag type=\"danger\" key={tag}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Loading>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"market-list\">\n\t\t\t{props.shouldShowAllMarkets ? (\n\t\t\t\t<>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<SiMarketo /> Markets\n\t\t\t\t\t</h2>\n\t\t\t\t\t{renderMarketList(markets)}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<Button icon=\"arrow-left\" onClick={props.showAllMarkets} />\n\t\t\t\t\t\t<span className=\"search-result-text\">\n\t\t\t\t\t\t\t{`showing search results for \"${props.currentSearchTerm}\": ${props.searchResultList.length} matching`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t{renderMarketList(props.searchResultList.sort(sortByCreatedTimeAsc))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n",["79","80"],"/Users/Jun/Documents/FE projects/market-place/src/components/NewMarket.js",["81","82","83"],"import React, { useState, useContext, useEffect } from \"react\";\nimport {\n\tButton,\n\tIcon,\n\tDialog,\n\tForm,\n\tInput,\n\tNotification,\n\tSelect,\n} from \"element-react\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createMarket } from \"../graphql/mutations\";\nimport { UserContext } from \"../App\";\n\nconst TAGS = [\"Food\", \"Clothing\", \"Eletronics\", \"Book\", \"Office\"];\n\nexport default function NewMarket(props) {\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\tconst [marketName, setMarketName] = useState(\"\");\n\tconst user = useContext(UserContext);\n\tconst [tagsSelected, setTagsSelected] = useState([]);\n\n\tfunction handleCloseDialog() {\n\t\tsetIsDialogOpen(false);\n\t}\n\n\t/* graphql operation for creating market */\n\tasync function handleCreateMarket(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(user.user.username);\n\t\tconst { username } = user.user;\n\t\tlet mutationInput = {\n\t\t\tname: marketName,\n\t\t\towner: username,\n\t\t\ttags: tagsSelected,\n\t\t};\n\t\ttry {\n\t\t\t// debugger;\n\t\t\tconst result = await API.graphql(\n\t\t\t\t{\n\t\t\t\t\tquery: createMarket,\n\t\t\t\t\tvariables: { input: mutationInput },\n\t\t\t\t}\n\t\t\t\t// graphqlOperation(createMarket, { input: mutationInput })\n\t\t\t);\n\t\t\tconsole.log(result);\n\t\t\tsetMarketName(\"\");\n\t\t\tsetTagsSelected([]);\n\t\t\tsetIsDialogOpen(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tconsole.dir(err.message);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Error occurred trying to add market\",\n\t\t\t\tduration: 3000,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleTagSelect(selectedTag) {\n\t\tsetTagsSelected(selectedTag);\n\t}\n\n\tfunction handleSearchInputChange(input) {\n\t\tprops.setSearchTerm(input);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"market-header\">\n\t\t\t\t<h1 className=\"market-title\">Add Your Market</h1>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonClick={() => setIsDialogOpen(true)}\n\t\t\t\t\tclassName=\"market-add-button\"\n\t\t\t\t>\n\t\t\t\t\t<AiFillPlusCircle size=\"3em\" color=\"#20A0FF\" />\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<Form inline={true} className=\"market-search-bar\">\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={props.searchTerm}\n\t\t\t\t\t\tonChange={handleSearchInputChange}\n\t\t\t\t\t\tplaceholder=\"search markets by name or tag\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={props.handleSearchSubmit}\n\t\t\t\t\t\tloading={props.isSearchLoading}\n\t\t\t\t\t\tdisabled={props.searchTerm === \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\n\t\t\t<Dialog\n\t\t\t\ttitle=\"Add new market\"\n\t\t\t\tvisible={isDialogOpen}\n\t\t\t\tonCancel={handleCloseDialog}\n\t\t\t\tcloseOnPressEscape={true}\n\t\t\t\ttop=\"30%\"\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<Form\n\t\t\t\t\t\t// onSubmit={(event) => {\n\t\t\t\t\t\t// \tevent.preventDefault();\n\t\t\t\t\t\t// \tconsole.log(\"here\");\n\t\t\t\t\t\t// }}\n\t\t\t\t\t\tonSubmit={handleCreateMarket}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item label=\"New Market Name\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Market Name\"\n\t\t\t\t\t\t\t\ttrim={true}\n\t\t\t\t\t\t\t\tonChange={(name) => setMarketName(name)}\n\t\t\t\t\t\t\t\tvalue={marketName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Add tags\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={tagsSelected}\n\t\t\t\t\t\t\t\tfilterable={true}\n\t\t\t\t\t\t\t\tmultiple={true}\n\t\t\t\t\t\t\t\tonChange={handleTagSelect}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{TAGS.map((tag) => (\n\t\t\t\t\t\t\t\t\t<Select.Option key={tag} value={tag} label={tag} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</Dialog.Body>\n\t\t\t\t<Dialog.Footer>\n\t\t\t\t\t<Button onClick={handleCloseDialog}>Cancel</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tdisabled={!marketName}\n\t\t\t\t\t\tonClick={handleCreateMarket}\n\t\t\t\t\t\t// nativeType=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t\t</Dialog.Footer>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n",["84","85"],"/Users/Jun/Documents/FE projects/market-place/src/components/Navbar.js",["86"],"import React from \"react\";\nimport { Menu, Icon, Button } from \"element-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FaSellsy } from \"react-icons/fa\";\nimport { MdSettings } from \"react-icons/md\";\n\nexport default function Navbar({ user, handleSignOut }) {\n\treturn (\n\t\t<Menu mode=\"horizontal\" theme=\"dark\" defaultActive=\"1\">\n\t\t\t<div className=\"nav-container\">\n\t\t\t\t<Menu.Item index=\"1\">\n\t\t\t\t\t<NavLink to=\"/\" className=\"nav-link\">\n\t\t\t\t\t\t<FaSellsy color=\"orange\" size=\"2em\" />\n\t\t\t\t\t\t<span className=\"app-name\">Market Place</span>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<div className=\"nav-items\">\n\t\t\t\t\t<span className=\"greeting\">Hello, {user.username} </span>\n\t\t\t\t\t<Menu.Item index=\"2\">\n\t\t\t\t\t\t<NavLink to=\"/profile\" className=\"nav-link\">\n\t\t\t\t\t\t\t<MdSettings size=\"1.4em\" />\n\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item index=\"3\">\n\t\t\t\t\t\t<Button type=\"warning\" onClick={handleSignOut}>\n\t\t\t\t\t\t\tSign Out\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Menu>\n\t);\n}\n",["87","88"],"/Users/Jun/Documents/FE projects/market-place/src/aws-exports.js",[],"/Users/Jun/Documents/FE projects/market-place/src/graphql/mutations.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/HomePage.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/MarketPage.js",["89","90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport { API, Auth, graphqlOperation } from \"aws-amplify\";\n// import { getMarket } from \"../graphql/queries\";\nimport { Link } from \"react-router-dom\";\nimport { Loading, Tabs, Icon, Button } from \"element-react\";\nimport NewProduct from \"../components/NewProduct\";\nimport Product from \"../components/Product\";\nimport {\n\tonCreateProduct,\n\tonUpdateProduct,\n\tonDeleteProduct,\n} from \"../graphql/subscriptions\";\nimport { COMPARE_NOTES_CREATEDTIME_ASCENDING } from \"../utils\"; // import { useParams } from \"react-router-dom\";\n\n/* the query generated by AWS does not have the ~file~ field, so I added it here */\nconst getMarket = /* GraphQL */ `\n\tquery GetMarket($id: ID!) {\n\t\tgetMarket(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\ttags\n\t\t\towner\n\t\t\tcreatedAt\n\t\t\tproducts {\n\t\t\t\titems {\n\t\t\t\t\tid\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tshipped\n\t\t\t\t\towner\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tmarketID\n\t\t\t\t\tupdatedAt\n\t\t\t\t\tfile {\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnextToken\n\t\t\t}\n\t\t\tupdatedAt\n\t\t}\n\t}\n`;\n\n// export const IsLoadingContext = React.createContext();\n\nexport default function MarketPage({ user, marketId }) {\n\tconst [market, setMarket] = useState();\n\tconst [isLoading, setIsLoading] = useState(true);\n\t/* subscription on product changes:\n\tWayOfImplement 1: updating the ~products~ property of the  ~market~ variable\n\tWOI2: declare a new state ~products~ and update it\n\n\tFor this feature, they don't differ. But in case future features would need to use ~market~ variable in other components, it's better for ~market~ to stay up to date. Therefore I'm choosing WOI1 here.\n\t*/\n\t// const [products, setProducts] = useState();\n\n\tuseEffect(() => {\n\t\tfetchMarket();\n\t}, []);\n\n\tasync function fetchMarket() {\n\t\ttry {\n\t\t\tconst fetchResult = await API.graphql(\n\t\t\t\tgraphqlOperation(getMarket, {\n\t\t\t\t\tid: marketId,\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(fetchResult);\n\t\t\tsetMarket(fetchResult.data.getMarket);\n\t\t\tsetIsLoading(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\t/* subscription to product create, update and delete */\n\tuseEffect(() => {\n\t\t/* subscription to product create */\n\t\tconst onCreateProductListener = API.graphql(\n\t\t\tgraphqlOperation(onCreateProduct, {\n\t\t\t\towner: user.attributes.sub,\n\t\t\t\t// owner: \"test1\",\n\t\t\t})\n\t\t).subscribe({\n\t\t\tnext: (productData) => {\n\t\t\t\tconst createdProduct = productData.value.data.onCreateProduct;\n\t\t\t\t/* 如何update ~market~? */\n\t\t\t\t/* ==> functional update */\n\n\t\t\t\tconsole.log(market);\n\t\t\t\tsetMarket((prevMarket) => {\n\t\t\t\t\tconst updatedMarket = { ...prevMarket };\n\t\t\t\t\tupdatedMarket.products.items.push(createdProduct);\n\t\t\t\t\treturn updatedMarket;\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.warn(err.error.errors[0].message);\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\t\t});\n\n\t\t/*subscription to product update */\n\t\tconst onUpdateProductListener = API.graphql(\n\t\t\tgraphqlOperation(onUpdateProduct, {\n\t\t\t\towner: user.attributes.sub,\n\t\t\t})\n\t\t).subscribe({\n\t\t\tnext: (productData) => {\n\t\t\t\tconst updatedProduct = productData.value.data.onUpdateProduct;\n\t\t\t\tsetMarket((prevMarket) => {\n\t\t\t\t\tconst updatedMarket = { ...prevMarket };\n\t\t\t\t\tupdatedMarket.products.items = prevMarket.products.items.map(\n\t\t\t\t\t\t(product) => {\n\t\t\t\t\t\t\tif (product.id === updatedProduct.id) return updatedProduct;\n\t\t\t\t\t\t\telse return product;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn updatedMarket;\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.warn(err.error.errors[0].message);\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\t\t});\n\n\t\t/*subscription to product delete */\n\t\tconst onDeleteProductListener = API.graphql(\n\t\t\tgraphqlOperation(onDeleteProduct, {\n\t\t\t\towner: user.attributes.sub,\n\t\t\t})\n\t\t).subscribe({\n\t\t\tnext: (productData) => {\n\t\t\t\tconst deletedProduct = productData.value.data.onDeleteProduct;\n\t\t\t\tsetMarket((prevMarket) => {\n\t\t\t\t\tconst updatedMarket = { ...prevMarket };\n\t\t\t\t\tupdatedMarket.products.items = prevMarket.products.items.filter(\n\t\t\t\t\t\t(product) => product.id != deletedProduct.id\n\t\t\t\t\t);\n\t\t\t\t\treturn updatedMarket;\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.warn(err.error.errors[0].message);\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\t\t});\n\n\t\treturn function cleanup() {\n\t\t\tonCreateProductListener.unsubscribe();\n\t\t\tonUpdateProductListener.unsubscribe();\n\t\t\tonDeleteProductListener.unsubscribe();\n\t\t};\n\t}, [market]);\n\n\t/* QUESTION: 新创建一个product后，onMarketUpdate的subscription会不会返回数据呢？ */\n\t/* ==> ANSWER: 试验之后，onMarketUpdate没有对删除一个product做出反应，由此推测onMarketUpdate只对updateMarket有反应 */\n\t// useEffect(() => {\n\t// \tconst onMarketUpdateListener = API.graphql(\n\t// \t\tgraphqlOperation(onUpdateMarket)\n\t// \t).subscribe({\n\t// \t\tnext: (data) => console.log(data),\n\t// \t\terror: (err) => console.log(err),\n\t// \t});\n\n\t// \treturn function cleanup() {\n\t// \t\tonMarketUpdateListener.unsubscribe();\n\t// \t};\n\t// }, []);\n\n\treturn isLoading ? (\n\t\t<Loading fullscreen></Loading>\n\t) : (\n\t\t<>\n\t\t\t{/* <IsLoadingContext.Provider value={{ setIsLoading }}> */}\n\t\t\t<div className=\"back-nav-link\">\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Button>\n\t\t\t\t\t\t<i className=\"el-icon-arrow-left\" />\n\t\t\t\t\t\t<span>Back to Markets List</span>\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div className=\"market-name\">\n\t\t\t\t<strong>{market.name}</strong> <span>{`By ${market.owner}`}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<i className=\"el-icon-date\" /> <span>{market.createdAt}</span>\n\t\t\t</div>\n\t\t\t<Tabs\n\t\t\t\tclassName=\"market-page-tabs\"\n\t\t\t\ttype=\"border-card\"\n\t\t\t\tvalue={market.owner === user.username ? \"1\" : \"2\"}\n\t\t\t>\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tdisabled={user.username !== market.owner}\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Icon name=\"plus\" />\n\t\t\t\t\t\t\tAdd Product\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"1\"\n\t\t\t\t\tclassName=\"market-page-new-product\"\n\t\t\t\t>\n\t\t\t\t\t<NewProduct marketId={marketId} />\n\t\t\t\t</Tabs.Pane>\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tclassName=\"market-page-prodcut-list\"\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Icon name=\"menu\" />\n\t\t\t\t\t\t\t{`Products (${market.products.items.length})`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"2\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"product-list\">\n\t\t\t\t\t\t{market.products.items\n\t\t\t\t\t\t\t.sort(COMPARE_NOTES_CREATEDTIME_ASCENDING)\n\t\t\t\t\t\t\t.map((product) => {\n\t\t\t\t\t\t\t\treturn <Product key={product.id} product={product} />;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</Tabs.Pane>\n\t\t\t</Tabs>\n\t\t\t{/* </IsLoadingContext.Provider> */}\n\t\t</>\n\t);\n}\n",["93","94"],"/Users/Jun/Documents/FE projects/market-place/src/App.js",["95","96","97"],"/Users/Jun/Documents/FE projects/market-place/src/graphql/subscriptions.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/NewProduct.js",["98","99","100","101"],"// import { AmplifyPhotoPicker } from \"@aws-amplify/ui-react\";\nimport { PhotoPicker } from \"aws-amplify-react\";\nimport {\n\tButton,\n\tForm,\n\tInput,\n\tNotification,\n\tRadio,\n\tProgress,\n} from \"element-react\";\nimport React, { useRef, useState } from \"react\";\nimport { API, Auth, graphqlOperation, Storage } from \"aws-amplify\";\nimport { createProduct } from \"../graphql/mutations\";\nimport awsExports from \"../aws-exports\";\nimport { convertDollarsToCents } from \"../utils\";\n\nexport default function NewProduct({ marketId }) {\n\tconst [description, setDescription] = useState(\"\");\n\tconst [price, setPrice] = useState();\n\tconst [isShipped, setIsShipped] = useState();\n\tconst [imageFile, setImageFile] = useState();\n\tconst [isUploading, setIsUploading] = useState(false);\n\tconst photoPicker = useRef(null);\n\tconst [uploadProgress, setUploadProgress] = useState();\n\t// todo: progress bar\n\n\tfunction handleDescriptionChange(value) {\n\t\tsetDescription(value);\n\t}\n\n\tfunction handlePriceChange(value) {\n\t\tsetPrice(value);\n\t}\n\n\tfunction handleRadioChange(value) {\n\t\tsetIsShipped(Boolean(value === \"Shipped\"));\n\t}\n\n\tasync function handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsUploading(true);\n\n\t\ttry {\n\t\t\t/* 给image file命名 */\n\t\t\t// const visibility = \"public\";\n\t\t\tconst { identityId } = await Auth.currentCredentials();\n\t\t\t// const fileName = `/${visibility}/${identityId}/${Date.now()}-${\n\t\t\t// \timageFile.name\n\t\t\t// }`;\n\t\t\tconst fileName = `${identityId}/${Date.now()}-${imageFile.name}`;\n\t\t\t/* upload image file to S3 */\n\t\t\t// console.log(imageFile);\n\t\t\tconst uploadedFile = await Storage.put(fileName, imageFile, {\n\t\t\t\tcontentType: imageFile.type,\n\t\t\t});\n\t\t\t// console.log(uploadedFile);\n\t\t\t/* S3 object */\n\t\t\tconst S3Object = {\n\t\t\t\tkey: uploadedFile.key,\n\t\t\t\tregion: awsExports.aws_user_files_s3_bucket_region,\n\t\t\t\tbucket: awsExports.aws_user_files_s3_bucket,\n\t\t\t};\n\t\t\t/* graphql: createProduct */\n\t\t\tconst newProduct = await API.graphql(\n\t\t\t\tgraphqlOperation(createProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tfile: S3Object,\n\t\t\t\t\t\tprice: convertDollarsToCents(price),\n\t\t\t\t\t\tmarketID: marketId,\n\t\t\t\t\t\tshipped: isShipped,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\t// console.log(newProduct);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success!\",\n\t\t\t\tmessage: \"Added New Product\",\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t} finally {\n\t\t\t/* try: 看看视觉上，button的loading状态的取消是不是和notification的出现是同时的 */\n\t\t\tsetDescription(\"\");\n\t\t\tsetPrice();\n\t\t\tsetIsShipped();\n\t\t\tsetImageFile();\n\t\t\tphotoPicker.current.state.previewSrc = undefined;\n\t\t\tsetIsUploading(false);\n\t\t}\n\t}\n\n\tfunction handleImagePick(image) {\n\t\t// console.log(image);\n\t\tsetImageFile(image.file);\n\t}\n\n\treturn (\n\t\t<div className=\"new-product-form\">\n\t\t\t<h3>ADD NEW PRODUCT</h3>\n\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t<Form.Item label=\"Add Product Description\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Set Product Price\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Price ($USD)\"\n\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\tonChange={handlePriceChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Is the Product Shipped or Emailed to the Customer?\">\n\t\t\t\t\t{/* <Radio.Group onChange> */}\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tchecked={isShipped === true}\n\t\t\t\t\t\tvalue=\"Shipped\"\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tShipped\n\t\t\t\t\t</Radio>\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tchecked={isShipped === false}\n\t\t\t\t\t\tvalue=\"Emailed\"\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tEmailed\n\t\t\t\t\t</Radio>\n\t\t\t\t\t{/* </Radio.Group> */}\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Upload Product Image\">\n\t\t\t\t\t<PhotoPicker\n\t\t\t\t\t\tref={photoPicker}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\tsectionHeader: {\n\t\t\t\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformContainer: {\n\t\t\t\t\t\t\t\tmargin: \"0\",\n\t\t\t\t\t\t\t\tpadding: \"0.2em\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpreview=\"show\"\n\t\t\t\t\t\t// onLoad={(param) => console.log(param)}\n\t\t\t\t\t\tonPick={handleImagePick}\n\t\t\t\t\t\t// onPick={(file) => console.log(file)}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t{/* {console.log(description, price, isShipped, imageFile, isShipped)} */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t!description ||\n\t\t\t\t\t\t\t!price ||\n\t\t\t\t\t\t\tisShipped === undefined ||\n\t\t\t\t\t\t\t!imageFile ||\n\t\t\t\t\t\t\tisUploading\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={handleFormSubmit}\n\t\t\t\t\t\tloading={isUploading}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Product\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/index.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/ProfilePage.js",[],"/Users/Jun/Documents/FE projects/market-place/src/utils/index.js",[],"/Users/Jun/Documents/FE projects/market-place/src/graphql/queries.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/Product.js",["102"],"import { S3Image } from \"aws-amplify-react\";\nimport {\n\tButton,\n\tCard,\n\tDialog,\n\tForm,\n\tInput,\n\tRadio,\n\tNotification,\n\tMessageBox,\n} from \"element-react\";\nimport React, { useContext, useState } from \"react\";\nimport PayButton from \"./PayButton\";\nimport { UserContext } from \"../App\";\nimport { convertCentsToDollars, convertDollarsToCents } from \"../utils\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { deleteProduct, updateProduct } from \"../graphql/mutations\";\n\nexport default function Product({ product }) {\n\tconst user = useContext(UserContext);\n\tconst [isOwner, setIsOwner] = useState(\n\t\tproduct.owner === user.user.attributes.sub\n\t);\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\tconst [description, setDescription] = useState(product.description);\n\tconst [price, setPrice] = useState(convertCentsToDollars(product.price));\n\tconst [isShipped, setIsShipped] = useState(product.shipped);\n\tconst [isUpdating, setIsUpdating] = useState(false);\n\n\tfunction handleDescriptionChange(value) {\n\t\tsetDescription(value);\n\t}\n\n\tfunction handlePriceChange(value) {\n\t\tsetPrice(value);\n\t}\n\n\tfunction handleRadioChange(value) {\n\t\tsetIsShipped(Boolean(value === \"Shipped\"));\n\t}\n\n\tasync function handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsUpdating(true);\n\t\ttry {\n\t\t\tconst updateResult = await API.graphql(\n\t\t\t\tgraphqlOperation(updateProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tid: product.id,\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tprice: convertDollarsToCents(price),\n\t\t\t\t\t\tshipped: isShipped,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(updateResult);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success\",\n\t\t\t\tmessage: \"Updated Product!\",\n\t\t\t});\n\t\t\tsetIsDialogOpen(false);\n\t\t\tsetIsUpdating(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Update Product\",\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction closeDialog() {\n\t\tsetIsDialogOpen(false);\n\t}\n\n\tfunction handleDelete() {\n\t\tMessageBox.confirm(\n\t\t\t\"This will permanently delete the product. Continue?\",\n\t\t\t\"Confirm\",\n\t\t\t{\n\t\t\t\tconfirmButtonText: \"Delete\",\n\t\t\t\tconfirmButtonClass: \"danger\",\n\t\t\t\tcancelButtonText: \"Cancel\",\n\t\t\t\ttype: \"warning\",\n\t\t\t}\n\t\t)\n\t\t\t.then(() => {\n\t\t\t\tdeleteProductOperation();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tasync function deleteProductOperation() {\n\t\ttry {\n\t\t\t// debugger;\n\t\t\tconst deleteResult = await API.graphql(\n\t\t\t\tgraphqlOperation(deleteProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tid: product.id,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(deleteResult);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success\",\n\t\t\t\tmessage: \"Deleted Product\",\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Delete Product\",\n\t\t\t});\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"product-card\">\n\t\t\t<Card\n\t\t\t\tbodyStyle={{\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\t//  width: \"20em\"\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<S3Image\n\t\t\t\t\timgKey={product.file.key}\n\t\t\t\t\ttheme={{\n\t\t\t\t\t\tphotoImg: {\n\t\t\t\t\t\t\t// maxWidth: \"100%\",\n\t\t\t\t\t\t\t// maxHeight: \"100%\",\n\t\t\t\t\t\t\twidth: \"15em\",\n\t\t\t\t\t\t\theight: \"20em\",\n\t\t\t\t\t\t\tobjectFit: \"cover\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<strong>{product.description}</strong>\n\t\t\t\t<div className=\"shipped\">\n\t\t\t\t\t<i className=\"el-icon-message\" />\n\t\t\t\t\t{product.shipped ? \"Shipped\" : \"Emailed\"}\n\t\t\t\t\t<div className=\"price\">${convertCentsToDollars(product.price)}</div>\n\t\t\t\t</div>\n\t\t\t\t{isOwner ? (\n\t\t\t\t\t<div className=\"owner-buttons\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\tonClick={() => setIsDialogOpen(true)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"danger\" icon=\"delete\" onClick={handleDelete} />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"pay-button\">\n\t\t\t\t\t\t<PayButton product={product} user={user} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Card>\n\n\t\t\t{/* dialog */}\n\t\t\t<Dialog\n\t\t\t\ttitle=\"Edit Product\"\n\t\t\t\tvisible={isDialogOpen}\n\t\t\t\tonCancel={closeDialog}\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Form.Item label=\"Update Product Description\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Update Product Price\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tplaceholder=\"Price ($USD)\"\n\t\t\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\t\t\tonChange={handlePriceChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Is the Product Shipped or Emailed to the Customer?\">\n\t\t\t\t\t\t\t{/* <Radio.Group onChange> */}\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tchecked={isShipped === true}\n\t\t\t\t\t\t\t\tvalue=\"Shipped\"\n\t\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShipped\n\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tchecked={isShipped === false}\n\t\t\t\t\t\t\t\tvalue=\"Emailed\"\n\t\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEmailed\n\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t{/* </Radio.Group> */}\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item className=\"dialog-buttons\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t!description ||\n\t\t\t\t\t\t\t\t\t!price ||\n\t\t\t\t\t\t\t\t\tisShipped === undefined ||\n\t\t\t\t\t\t\t\t\tisUpdating\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={handleFormSubmit}\n\t\t\t\t\t\t\t\tloading={isUpdating}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={closeDialog}>Cancel</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</Dialog.Body>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/components/PayButton.js",["103","104"],{"ruleId":"105","severity":1,"message":"106","line":4,"column":44,"nodeType":"107","messageId":"108","endLine":4,"endColumn":48},{"ruleId":"105","severity":1,"message":"109","line":24,"column":9,"nodeType":"107","messageId":"108","endLine":24,"endColumn":26},{"ruleId":"105","severity":1,"message":"110","line":24,"column":28,"nodeType":"107","messageId":"108","endLine":24,"endColumn":48},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"105","severity":1,"message":"115","line":1,"column":39,"nodeType":"107","messageId":"108","endLine":1,"endColumn":48},{"ruleId":"105","severity":1,"message":"106","line":4,"column":2,"nodeType":"107","messageId":"108","endLine":4,"endColumn":6},{"ruleId":"105","severity":1,"message":"116","line":12,"column":15,"nodeType":"107","messageId":"108","endLine":12,"endColumn":31},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":16,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"105","severity":1,"message":"121","line":2,"column":15,"nodeType":"107","messageId":"108","endLine":2,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":60,"column":5,"nodeType":"124","endLine":60,"endColumn":7,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":140,"column":31,"nodeType":"128","messageId":"129","endLine":140,"endColumn":33},{"ruleId":"122","severity":1,"message":"130","line":156,"column":5,"nodeType":"124","endLine":156,"endColumn":13,"suggestions":"131"},{"ruleId":"111","replacedBy":"132"},{"ruleId":"113","replacedBy":"133"},{"ruleId":"105","severity":1,"message":"134","line":4,"column":2,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"105","severity":1,"message":"135","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":23},{"ruleId":"105","severity":1,"message":"136","line":7,"column":25,"nodeType":"107","messageId":"108","endLine":7,"endColumn":34},{"ruleId":"105","severity":1,"message":"137","line":9,"column":2,"nodeType":"107","messageId":"108","endLine":9,"endColumn":10},{"ruleId":"105","severity":1,"message":"138","line":24,"column":9,"nodeType":"107","messageId":"108","endLine":24,"endColumn":23},{"ruleId":"105","severity":1,"message":"139","line":24,"column":25,"nodeType":"107","messageId":"108","endLine":24,"endColumn":42},{"ruleId":"105","severity":1,"message":"140","line":64,"column":10,"nodeType":"107","messageId":"108","endLine":64,"endColumn":20},{"ruleId":"105","severity":1,"message":"141","line":21,"column":18,"nodeType":"107","messageId":"108","endLine":21,"endColumn":28},{"ruleId":"105","severity":1,"message":"142","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":22},{"ruleId":"105","severity":1,"message":"143","line":3,"column":17,"nodeType":"107","messageId":"108","endLine":3,"endColumn":27},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'currentSearchTerm' is assigned a value but never used.","'setCurrentSearchTerm' is assigned a value but never used.","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'useEffect' is defined but never used.","'graphqlOperation' is defined but never used.",["144"],["145"],["144"],["145"],"'Auth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMarket'. Either include it or remove the dependency array.","ArrayExpression",["146"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.attributes.sub'. Either include it or remove the dependency array.",["147"],["144"],["145"],"'AmplifyGreetings' is defined but never used.","'Authenticator' is defined but never used.","'Greetings' is defined but never used.","'Progress' is defined but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","'newProduct' is assigned a value but never used.","'setIsOwner' is assigned a value but never used.","'Notification' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [fetchMarket]",{"range":"152","text":"153"},"Update the dependencies array to be: [market, user.attributes.sub]",{"range":"154","text":"155"},[1665,1667],"[fetchMarket]",[4185,4193],"[market, user.attributes.sub]"]