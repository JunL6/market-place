[{"/Users/Jun/Documents/FE projects/market-place/src/components/MarketList.js":"1","/Users/Jun/Documents/FE projects/market-place/src/components/NewMarket.js":"2","/Users/Jun/Documents/FE projects/market-place/src/components/Navbar.js":"3","/Users/Jun/Documents/FE projects/market-place/src/aws-exports.js":"4","/Users/Jun/Documents/FE projects/market-place/src/graphql/mutations.js":"5","/Users/Jun/Documents/FE projects/market-place/src/pages/HomePage.js":"6","/Users/Jun/Documents/FE projects/market-place/src/pages/MarketPage.js":"7","/Users/Jun/Documents/FE projects/market-place/src/App.js":"8","/Users/Jun/Documents/FE projects/market-place/src/graphql/subscriptions.js":"9","/Users/Jun/Documents/FE projects/market-place/src/components/NewProduct.js":"10","/Users/Jun/Documents/FE projects/market-place/src/index.js":"11","/Users/Jun/Documents/FE projects/market-place/src/pages/ProfilePage.js":"12","/Users/Jun/Documents/FE projects/market-place/src/utils/index.js":"13","/Users/Jun/Documents/FE projects/market-place/src/graphql/queries.js":"14","/Users/Jun/Documents/FE projects/market-place/src/components/Product.js":"15","/Users/Jun/Documents/FE projects/market-place/src/components/PayButton.js":"16","/Users/Jun/Documents/FE projects/market-place/src/pages/HomePage2.js":"17","/Users/Jun/Documents/FE projects/market-place/src/components/ProductSearchInput.js":"18","/Users/Jun/Documents/FE projects/market-place/src/components/ProductList.js":"19"},{"size":3407,"mtime":1609210619092,"results":"20","hashOfConfig":"21"},{"size":3647,"mtime":1607983832209,"results":"22","hashOfConfig":"21"},{"size":1133,"mtime":1609309387010,"results":"23","hashOfConfig":"21"},{"size":1260,"mtime":1609311259717,"results":"24","hashOfConfig":"21"},{"size":5953,"mtime":1609302664026,"results":"25","hashOfConfig":"21"},{"size":1757,"mtime":1609233409619,"results":"26","hashOfConfig":"21"},{"size":6207,"mtime":1609313895418,"results":"27","hashOfConfig":"21"},{"size":3182,"mtime":1609490025697,"results":"28","hashOfConfig":"21"},{"size":2707,"mtime":1609311255798,"results":"29","hashOfConfig":"21"},{"size":4890,"mtime":1609311455980,"results":"30","hashOfConfig":"21"},{"size":653,"mtime":1607640596323,"results":"31","hashOfConfig":"21"},{"size":4011,"mtime":1609313682437,"results":"32","hashOfConfig":"21"},{"size":885,"mtime":1609280895644,"results":"33","hashOfConfig":"21"},{"size":3461,"mtime":1609292010712,"results":"34","hashOfConfig":"21"},{"size":6875,"mtime":1609494632287,"results":"35","hashOfConfig":"21"},{"size":3155,"mtime":1609146029283,"results":"36","hashOfConfig":"21"},{"size":2730,"mtime":1609313275330,"results":"37","hashOfConfig":"21"},{"size":743,"mtime":1609294186480,"results":"38","hashOfConfig":"21"},{"size":435,"mtime":1609491985094,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1hnzflb",{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jun/Documents/FE projects/market-place/src/components/MarketList.js",["90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport { listMarkets } from \"../graphql/queries\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { Loading, Card, Tag, Notification, Icon, Button } from \"element-react\";\nimport { SiMarketo } from \"react-icons/si\";\nimport { Link } from \"react-router-dom\";\nimport { onCreateMarket } from \"../graphql/subscriptions\";\n\nfunction sortByCreatedTimeAsc(a, b) {\n\tif (new Date(a.createdAt).getTime() < new Date(b.createdAt).getTime())\n\t\treturn 1;\n\telse return -1;\n}\n\nconst cardBodyStyle = {\n\tdisplay: \"flex\",\n\tflexDirection: \"row\",\n\tjustifyContent: \"space-between\",\n\t// backgroundColor: \"rgba(233, 243, 254, 0.4)\",\n};\n\nexport default function MarketList(props) {\n\tconst [markets, setMarkets] = useState(null);\n\tconst [currentSearchTerm, setCurrentSearchTerm] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tfetchMarkets();\n\t}, []);\n\n\t/* graphql subscription for onCreateMarket */\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst createMarketSubscription = API.graphql(\n\t\t\t\tgraphqlOperation(onCreateMarket)\n\t\t\t).subscribe({\n\t\t\t\tnext: (marketData) => {\n\t\t\t\t\tconst newMarket = marketData.value.data.onCreateMarket;\n\t\t\t\t\tsetMarkets((prevMarkets) => {\n\t\t\t\t\t\treturn [...prevMarkets, newMarket].sort(sortByCreatedTimeAsc);\n\t\t\t\t\t});\n\t\t\t\t\tNotification.success({\n\t\t\t\t\t\ttitle: \"Success!\",\n\t\t\t\t\t\tmessage: \"Added new market\",\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn function cleanup() {\n\t\t\t\tcreateMarketSubscription.unsubscribe();\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}, []);\n\n\t/* graphql operatino for getting list of markets for the current user */\n\tasync function fetchMarkets() {\n\t\ttry {\n\t\t\tconst result = await API.graphql({ query: listMarkets });\n\t\t\tconsole.log(result);\n\t\t\tsetMarkets(result.data.listMarkets.items.sort(sortByCreatedTimeAsc));\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tfunction renderMarketList(markets) {\n\t\treturn (\n\t\t\t<Loading text=\"loading markets...\" loading={markets === null}>\n\t\t\t\t{markets && markets.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{markets.map((market) => (\n\t\t\t\t\t\t\t<div className=\"market-list-item\" key={market.id}>\n\t\t\t\t\t\t\t\t<Card bodyStyle={cardBodyStyle}>\n\t\t\t\t\t\t\t\t\t<div className=\"market-list-item-left\">\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={`/markets/${market.id}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"market-list-item-marketname\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span>{market.name}</span>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<span className=\"market-list-item-product\">\n\t\t\t\t\t\t\t\t\t\t\t{`${\n\t\t\t\t\t\t\t\t\t\t\t\tmarket.products.length > 0 ? market.products.length : 0\n\t\t\t\t\t\t\t\t\t\t\t} products`}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"market-list-item-right\">\n\t\t\t\t\t\t\t\t\t\t{market.tags &&\n\t\t\t\t\t\t\t\t\t\t\tmarket.tags.map((tag) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Tag type=\"danger\" key={tag}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Loading>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"market-list\">\n\t\t\t{props.shouldShowAllMarkets ? (\n\t\t\t\t<>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<SiMarketo /> Markets\n\t\t\t\t\t</h2>\n\t\t\t\t\t{renderMarketList(markets)}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<Button icon=\"arrow-left\" onClick={props.showAllMarkets} />\n\t\t\t\t\t\t<span className=\"search-result-text\">\n\t\t\t\t\t\t\t{`showing search results for \"${props.currentSearchTerm}\": ${props.searchResultList.length} matching`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t{renderMarketList(props.searchResultList.sort(sortByCreatedTimeAsc))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n",["93","94"],"/Users/Jun/Documents/FE projects/market-place/src/components/NewMarket.js",["95","96","97"],"import React, { useState, useContext, useEffect } from \"react\";\nimport {\n\tButton,\n\tIcon,\n\tDialog,\n\tForm,\n\tInput,\n\tNotification,\n\tSelect,\n} from \"element-react\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createMarket } from \"../graphql/mutations\";\nimport { UserContext } from \"../App\";\n\nconst TAGS = [\"Food\", \"Clothing\", \"Eletronics\", \"Book\", \"Office\"];\n\nexport default function NewMarket(props) {\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\tconst [marketName, setMarketName] = useState(\"\");\n\tconst user = useContext(UserContext);\n\tconst [tagsSelected, setTagsSelected] = useState([]);\n\n\tfunction handleCloseDialog() {\n\t\tsetIsDialogOpen(false);\n\t}\n\n\t/* graphql operation for creating market */\n\tasync function handleCreateMarket(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(user.user.username);\n\t\tconst { username } = user.user;\n\t\tlet mutationInput = {\n\t\t\tname: marketName,\n\t\t\towner: username,\n\t\t\ttags: tagsSelected,\n\t\t};\n\t\ttry {\n\t\t\t// debugger;\n\t\t\tconst result = await API.graphql(\n\t\t\t\t{\n\t\t\t\t\tquery: createMarket,\n\t\t\t\t\tvariables: { input: mutationInput },\n\t\t\t\t}\n\t\t\t\t// graphqlOperation(createMarket, { input: mutationInput })\n\t\t\t);\n\t\t\tconsole.log(result);\n\t\t\tsetMarketName(\"\");\n\t\t\tsetTagsSelected([]);\n\t\t\tsetIsDialogOpen(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tconsole.dir(err.message);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Error occurred trying to add market\",\n\t\t\t\tduration: 3000,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleTagSelect(selectedTag) {\n\t\tsetTagsSelected(selectedTag);\n\t}\n\n\tfunction handleSearchInputChange(input) {\n\t\tprops.setSearchTerm(input);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"market-header\">\n\t\t\t\t<h1 className=\"market-title\">Add Your Market</h1>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonClick={() => setIsDialogOpen(true)}\n\t\t\t\t\tclassName=\"market-add-button\"\n\t\t\t\t>\n\t\t\t\t\t<AiFillPlusCircle size=\"3em\" color=\"#20A0FF\" />\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<Form inline={true} className=\"market-search-bar\">\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={props.searchTerm}\n\t\t\t\t\t\tonChange={handleSearchInputChange}\n\t\t\t\t\t\tplaceholder=\"search markets by name or tag\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={props.handleSearchSubmit}\n\t\t\t\t\t\tloading={props.isSearchLoading}\n\t\t\t\t\t\tdisabled={props.searchTerm === \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\n\t\t\t<Dialog\n\t\t\t\ttitle=\"Add new market\"\n\t\t\t\tvisible={isDialogOpen}\n\t\t\t\tonCancel={handleCloseDialog}\n\t\t\t\tcloseOnPressEscape={true}\n\t\t\t\ttop=\"30%\"\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<Form\n\t\t\t\t\t\t// onSubmit={(event) => {\n\t\t\t\t\t\t// \tevent.preventDefault();\n\t\t\t\t\t\t// \tconsole.log(\"here\");\n\t\t\t\t\t\t// }}\n\t\t\t\t\t\tonSubmit={handleCreateMarket}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item label=\"New Market Name\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Market Name\"\n\t\t\t\t\t\t\t\ttrim={true}\n\t\t\t\t\t\t\t\tonChange={(name) => setMarketName(name)}\n\t\t\t\t\t\t\t\tvalue={marketName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Add tags\">\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={tagsSelected}\n\t\t\t\t\t\t\t\tfilterable={true}\n\t\t\t\t\t\t\t\tmultiple={true}\n\t\t\t\t\t\t\t\tonChange={handleTagSelect}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{TAGS.map((tag) => (\n\t\t\t\t\t\t\t\t\t<Select.Option key={tag} value={tag} label={tag} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</Dialog.Body>\n\t\t\t\t<Dialog.Footer>\n\t\t\t\t\t<Button onClick={handleCloseDialog}>Cancel</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tdisabled={!marketName}\n\t\t\t\t\t\tonClick={handleCreateMarket}\n\t\t\t\t\t\t// nativeType=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t\t</Dialog.Footer>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n",["98","99"],"/Users/Jun/Documents/FE projects/market-place/src/components/Navbar.js",["100","101"],"import React from \"react\";\nimport { Menu, Icon, Button } from \"element-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FaSellsy } from \"react-icons/fa\";\nimport { MdSettings } from \"react-icons/md\";\n\nexport default function Navbar({ user, handleSignOut }) {\n\treturn (\n\t\t<Menu mode=\"horizontal\" theme=\"dark\" defaultActive=\"1\">\n\t\t\t<div className=\"nav-container\">\n\t\t\t\t<Menu.Item index=\"1\">\n\t\t\t\t\t<NavLink to=\"/\" className=\"nav-link\">\n\t\t\t\t\t\t<FaSellsy color=\"orange\" size=\"2em\" />\n\t\t\t\t\t\t<span className=\"app-name\">Market Place</span>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<div className=\"nav-items\">\n\t\t\t\t\t<Menu.SubMenu\n\t\t\t\t\t\tindex=\"2\"\n\t\t\t\t\t\ttitle={user.username}\n\t\t\t\t\t\tclassName=\"nav-sub-menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu.Item index=\"2-1\">\n\t\t\t\t\t\t\t{/* <Button type=\"warning\" onClick={handleSignOut}> */}\n\t\t\t\t\t\t\t<span onClick={handleSignOut}>Sign Out</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu.SubMenu>\n\t\t\t\t\t<span className=\"greeting\"> </span>\n\t\t\t\t\t<Menu.Item index=\"3\">\n\t\t\t\t\t\t<NavLink to=\"/profile\" className=\"nav-link\">\n\t\t\t\t\t\t\t<MdSettings size=\"1.4em\" />\n\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Menu>\n\t);\n}\n",["102","103"],"/Users/Jun/Documents/FE projects/market-place/src/aws-exports.js",[],"/Users/Jun/Documents/FE projects/market-place/src/graphql/mutations.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/HomePage.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/MarketPage.js",["104","105","106","107","108","109"],"/Users/Jun/Documents/FE projects/market-place/src/App.js",["110","111","112","113"],"/Users/Jun/Documents/FE projects/market-place/src/graphql/subscriptions.js",[],["114","115"],"/Users/Jun/Documents/FE projects/market-place/src/components/NewProduct.js",["116","117","118","119"],"// import { AmplifyPhotoPicker } from \"@aws-amplify/ui-react\";\nimport { PhotoPicker } from \"aws-amplify-react\";\nimport {\n\tButton,\n\tForm,\n\tInput,\n\tNotification,\n\tRadio,\n\tProgress,\n} from \"element-react\";\nimport React, { useRef, useState } from \"react\";\nimport { API, Auth, graphqlOperation, Storage } from \"aws-amplify\";\nimport { createProduct } from \"../graphql/mutations\";\nimport awsExports from \"../aws-exports\";\nimport { convertDollarsToCents } from \"../utils\";\n\nexport default function NewProduct({ marketId }) {\n\tconst [productName, setProductName] = useState(\"\");\n\tconst [description, setDescription] = useState(\"\");\n\tconst [price, setPrice] = useState();\n\tconst [isShipped, setIsShipped] = useState();\n\tconst [imageFile, setImageFile] = useState();\n\tconst [isUploading, setIsUploading] = useState(false);\n\tconst photoPicker = useRef(null);\n\tconst [uploadProgress, setUploadProgress] = useState();\n\t// todo: progress bar\n\n\tfunction handleProductNameChange(value) {\n\t\tsetProductName(value);\n\t}\n\n\tfunction handleDescriptionChange(value) {\n\t\tsetDescription(value);\n\t}\n\n\tfunction handlePriceChange(value) {\n\t\tsetPrice(value);\n\t}\n\n\tfunction handleRadioChange(value) {\n\t\tsetIsShipped(Boolean(value === \"Shipped\"));\n\t}\n\n\tasync function handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsUploading(true);\n\n\t\ttry {\n\t\t\t/* 给image file命名 */\n\t\t\t// const visibility = \"public\";\n\t\t\tconst { identityId } = await Auth.currentCredentials();\n\t\t\t// const fileName = `/${visibility}/${identityId}/${Date.now()}-${\n\t\t\t// \timageFile.name\n\t\t\t// }`;\n\t\t\tconst fileName = `${identityId}/${Date.now()}-${imageFile.name}`;\n\t\t\t/* upload image file to S3 */\n\t\t\t// console.log(imageFile);\n\t\t\tconst uploadedFile = await Storage.put(fileName, imageFile, {\n\t\t\t\tcontentType: imageFile.type,\n\t\t\t});\n\t\t\t// console.log(uploadedFile);\n\t\t\t/* S3 object */\n\t\t\tconst S3Object = {\n\t\t\t\tkey: uploadedFile.key,\n\t\t\t\tregion: awsExports.aws_user_files_s3_bucket_region,\n\t\t\t\tbucket: awsExports.aws_user_files_s3_bucket,\n\t\t\t};\n\t\t\t/* graphql: createProduct */\n\t\t\tconst newProduct = await API.graphql(\n\t\t\t\tgraphqlOperation(createProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname: productName,\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tfile: S3Object,\n\t\t\t\t\t\tprice: convertDollarsToCents(price),\n\t\t\t\t\t\tmarketID: marketId,\n\t\t\t\t\t\tshipped: isShipped,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\t// console.log(newProduct);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success!\",\n\t\t\t\tmessage: \"Added New Product\",\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t} finally {\n\t\t\t/* try: 看看视觉上，button的loading状态的取消是不是和notification的出现是同时的 */\n\t\t\tsetProductName(\"\");\n\t\t\tsetDescription(\"\");\n\t\t\tsetPrice();\n\t\t\tsetIsShipped();\n\t\t\tsetImageFile();\n\t\t\tphotoPicker.current.state.previewSrc = undefined;\n\t\t\tsetIsUploading(false);\n\t\t}\n\t}\n\n\tfunction handleImagePick(image) {\n\t\t// console.log(image);\n\t\tsetImageFile(image.file);\n\t}\n\n\treturn (\n\t\t<div className=\"new-product-form\">\n\t\t\t<h3>ADD NEW PRODUCT</h3>\n\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t<Form.Item label=\"Product Name\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={productName}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"product name\"\n\t\t\t\t\t\tonChange={handleProductNameChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Product Description\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Product Price\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Price ($USD)\"\n\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\tonChange={handlePriceChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Is the Product Shipped or Emailed to the Customer?\">\n\t\t\t\t\t{/* <Radio.Group onChange> */}\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tchecked={isShipped === true}\n\t\t\t\t\t\tvalue=\"Shipped\"\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tShipped\n\t\t\t\t\t</Radio>\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tchecked={isShipped === false}\n\t\t\t\t\t\tvalue=\"Emailed\"\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tEmailed\n\t\t\t\t\t</Radio>\n\t\t\t\t\t{/* </Radio.Group> */}\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item label=\"Upload Product Image\">\n\t\t\t\t\t<PhotoPicker\n\t\t\t\t\t\tref={photoPicker}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\tsectionHeader: {\n\t\t\t\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformContainer: {\n\t\t\t\t\t\t\t\tmargin: \"0\",\n\t\t\t\t\t\t\t\tpadding: \"0.2em\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpreview=\"show\"\n\t\t\t\t\t\t// onLoad={(param) => console.log(param)}\n\t\t\t\t\t\tonPick={handleImagePick}\n\t\t\t\t\t\t// onPick={(file) => console.log(file)}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t{/* {console.log(description, price, isShipped, imageFile, isShipped)} */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t!productName ||\n\t\t\t\t\t\t\t!description ||\n\t\t\t\t\t\t\t!price ||\n\t\t\t\t\t\t\tisShipped === undefined ||\n\t\t\t\t\t\t\t!imageFile ||\n\t\t\t\t\t\t\tisUploading\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={handleFormSubmit}\n\t\t\t\t\t\tloading={isUploading}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Product\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/index.js",[],"/Users/Jun/Documents/FE projects/market-place/src/pages/ProfilePage.js",["120","121"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Loading, Table, Tabs } from \"element-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport {\n\tCOMPARE_NOTES_CREATEDTIME_ASCENDING,\n\tconvertCentsToDollars,\n\tdisplayDate,\n\tdisplayTime,\n} from \"../utils\";\nimport { S3Image } from \"aws-amplify-react\";\n\nconst getUserQuery = /* GraphQL */ `\n\tquery GetUser($id: ID!) {\n\t\tgetUser(id: $id) {\n\t\t\temail\n\t\t\tusername\n\t\t\torders(sortDirection: DESC) {\n\t\t\t\titems {\n\t\t\t\t\tid\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\towner\n\t\t\t\t\t\tprice\n\t\t\t\t\t\tshipped\n\t\t\t\t\t\tmarket {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfile {\n\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tshippingAddress {\n\t\t\t\t\t\taddress_line1\n\t\t\t\t\t\taddress_state\n\t\t\t\t\t\taddress_zip\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tcountry\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default function ProfilePage({ cognitoUser }) {\n\tconst [userInfo, setUserInfo] = useState();\n\n\tconsole.log(cognitoUser);\n\n\tasync function getUserInfo() {\n\t\tif (cognitoUser && cognitoUser.attributes.sub) {\n\t\t\ttry {\n\t\t\t\tconst result = await API.graphql(\n\t\t\t\t\tgraphqlOperation(getUserQuery, {\n\t\t\t\t\t\tid: cognitoUser.attributes.sub,\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\t// console.log(result.data.getUser);\n\t\t\t\tsetUserInfo(result.data.getUser);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(`Error fetching User information`, err);\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tgetUserInfo();\n\t}, [cognitoUser]);\n\n\t/* columns for <Table /> */\n\tconst columns = [\n\t\t{\n\t\t\tprop: \"name\",\n\t\t\t// width: 200,\n\t\t},\n\t\t{\n\t\t\tprop: \"value\",\n\t\t\t// width: 400,\n\t\t},\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<Tabs type=\"card\" className=\"profile-page\">\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tclassName=\"summary\"\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<i className=\"el-icon-information\"></i>\n\t\t\t\t\t\t\t<span>Account</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"1\"\n\t\t\t\t>\n\t\t\t\t\t<h3>PROFILE SUMMARY</h3>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName=\"user-profile-table\"\n\t\t\t\t\t\tstripe={true}\n\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tborder={true}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ name: \"Your Id\", value: cognitoUser.attributes.sub },\n\t\t\t\t\t\t\t{ name: \"Username\", value: cognitoUser.username },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"Your Email\",\n\t\t\t\t\t\t\t\tvalue: cognitoUser.attributes.email,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"Phone Number\",\n\t\t\t\t\t\t\t\tvalue: cognitoUser.attributes.phone_number,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Tabs.Pane>\n\t\t\t\t<Tabs.Pane\n\t\t\t\t\tclassName=\"orders\"\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<i className=\"el-icon-document\"></i>\n\t\t\t\t\t\t\t<span>Orders</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tname=\"2\"\n\t\t\t\t>\n\t\t\t\t\t{userInfo && userInfo.orders.items.length > 0 ? (\n\t\t\t\t\t\tuserInfo.orders.items\n\t\t\t\t\t\t\t.sort(COMPARE_NOTES_CREATEDTIME_ASCENDING)\n\t\t\t\t\t\t\t.map((order) => (\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tclassName=\"order-card\"\n\t\t\t\t\t\t\t\t\tkey={order.id}\n\t\t\t\t\t\t\t\t\tbodyStyle={{ display: \"flex\", width: \"40em\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<S3Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"product-image\"\n\t\t\t\t\t\t\t\t\t\timgKey={order.product.file.key}\n\t\t\t\t\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\t\t\t\t\tphotoImg: {\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"8em\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"8em\",\n\t\t\t\t\t\t\t\t\t\t\t\tobjectFit: \"cover\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"order-content\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"product-name\">{order.product.name}</div>\n\t\t\t\t\t\t\t\t\t\t<div>${convertCentsToDollars(order.product.price)}</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<small>{`${displayDate(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Date(order.createdAt)\n\t\t\t\t\t\t\t\t\t\t\t)} ${displayTime(new Date(order.createdAt))}`}</small>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\tShipping:{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t{order.product.shipped\n\t\t\t\t\t\t\t\t\t\t\t\t? // <div>\n\t\t\t\t\t\t\t\t\t\t\t\t  // \t<i>{order.shippingAddress.address_line1}</i>\n\t\t\t\t\t\t\t\t\t\t\t\t  // \t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t  // \t\t<i>{`${order.shippingAddress.city}, ${order.shippingAddress.address_state}, ${order.shippingAddress.country}, ${order.shippingAddress.address_zip}`}</i>\n\t\t\t\t\t\t\t\t\t\t\t\t  // \t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t  // </div>\n\t\t\t\t\t\t\t\t\t\t\t\t  `Delivery`\n\t\t\t\t\t\t\t\t\t\t\t\t: `Via Email`}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h3>You haven't placed any order yet.</h3>\n\t\t\t\t\t)}\n\t\t\t\t</Tabs.Pane>\n\t\t\t</Tabs>\n\t\t</>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/utils/index.js",[],"/Users/Jun/Documents/FE projects/market-place/src/graphql/queries.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/Product.js",["122"],"import { S3Image } from \"aws-amplify-react\";\nimport {\n\tButton,\n\tCard,\n\tDialog,\n\tForm,\n\tInput,\n\tRadio,\n\tNotification,\n\tMessageBox,\n} from \"element-react\";\nimport React, { useContext, useState } from \"react\";\nimport PayButton from \"./PayButton\";\nimport { UserContext } from \"../App\";\nimport { convertCentsToDollars, convertDollarsToCents } from \"../utils\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { deleteProduct, updateProduct } from \"../graphql/mutations\";\n\nexport default function Product({ product }) {\n\tconst user = useContext(UserContext);\n\tconst [isOwner, setIsOwner] = useState(\n\t\tproduct.owner === user.user.attributes.sub\n\t);\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\tconst [productName, setProductName] = useState(product.name);\n\tconst [description, setDescription] = useState(product.description);\n\tconst [price, setPrice] = useState(convertCentsToDollars(product.price));\n\tconst [isShipped, setIsShipped] = useState(product.shipped);\n\tconst [isUpdating, setIsUpdating] = useState(false);\n\tconst [shouldShowProductDetail, setShouldShowProductDetail] = useState(false);\n\n\tfunction handleProductNameChange(value) {\n\t\tsetProductName(value);\n\t}\n\n\tfunction handleDescriptionChange(value) {\n\t\tsetDescription(value);\n\t}\n\n\tfunction handlePriceChange(value) {\n\t\tsetPrice(value);\n\t}\n\n\tfunction handleRadioChange(value) {\n\t\tsetIsShipped(Boolean(value === \"Shipped\"));\n\t}\n\n\tasync function handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsUpdating(true);\n\t\ttry {\n\t\t\tconst updateResult = await API.graphql(\n\t\t\t\tgraphqlOperation(updateProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname: productName,\n\t\t\t\t\t\tid: product.id,\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tprice: convertDollarsToCents(price),\n\t\t\t\t\t\tshipped: isShipped,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(updateResult);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success\",\n\t\t\t\tmessage: \"Updated Product!\",\n\t\t\t});\n\t\t\tsetIsDialogOpen(false);\n\t\t\tsetIsUpdating(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Update Product\",\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction closeDialog() {\n\t\tsetIsDialogOpen(false);\n\t}\n\n\tfunction handleDelete() {\n\t\tMessageBox.confirm(\n\t\t\t\"This will permanently delete the product. Continue?\",\n\t\t\t\"Confirm\",\n\t\t\t{\n\t\t\t\tconfirmButtonText: \"Delete\",\n\t\t\t\tconfirmButtonClass: \"danger\",\n\t\t\t\tcancelButtonText: \"Cancel\",\n\t\t\t\ttype: \"warning\",\n\t\t\t}\n\t\t)\n\t\t\t.then(() => {\n\t\t\t\tdeleteProductOperation();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tasync function deleteProductOperation() {\n\t\ttry {\n\t\t\tconst deleteResult = await API.graphql(\n\t\t\t\tgraphqlOperation(deleteProduct, {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tid: product.id,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log(deleteResult);\n\t\t\tNotification.success({\n\t\t\t\ttitle: \"Success\",\n\t\t\t\tmessage: \"Deleted Product\",\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Delete Product\",\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction showProductDetail() {\n\t\tsetShouldShowProductDetail(true);\n\t}\n\n\tfunction hideProductDetail() {\n\t\t// debugger;\n\t\tsetShouldShowProductDetail(false);\n\t}\n\n\treturn (\n\t\t<div className=\"product-card\">\n\t\t\t<Card\n\t\t\t\tbodyStyle={{\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<S3Image\n\t\t\t\t\tonClick={showProductDetail}\n\t\t\t\t\timgKey={product.file.key}\n\t\t\t\t\ttheme={{\n\t\t\t\t\t\tphotoImg: {\n\t\t\t\t\t\t\twidth: \"15em\",\n\t\t\t\t\t\t\theight: \"20em\",\n\t\t\t\t\t\t\tobjectFit: \"cover\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className=\"product-card-content\" onClick={showProductDetail}>\n\t\t\t\t\t<strong>{product.name}</strong>\n\t\t\t\t\t{/* <div className=\"description\">{product.description}</div> */}\n\t\t\t\t\t<div className=\"shipped\">\n\t\t\t\t\t\t<i className=\"el-icon-message\" />\n\t\t\t\t\t\t{product.shipped ? \"Deliver\" : \"Email\"}\n\t\t\t\t\t\t<div className=\"price\">${convertCentsToDollars(product.price)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\n\t\t\t{/* dialog to see product detail */}\n\t\t\t<Dialog\n\t\t\t\ttop=\"5%\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tvisible={shouldShowProductDetail}\n\t\t\t\tonCancel={hideProductDetail}\n\t\t\t\tlockScroll={false}\n\t\t\t\tcustomClass=\"product-detail-dialog\"\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<S3Image\n\t\t\t\t\t\timgKey={product.file.key}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\tphotoImg: {\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t// height: \"20em\",\n\t\t\t\t\t\t\t\tobjectFit: \"cover\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"product-detail-content\">\n\t\t\t\t\t\t<span className=\"product-name\">{product.name}</span>\n\t\t\t\t\t\t<span className=\"product-price\">{`$${convertCentsToDollars(\n\t\t\t\t\t\t\tproduct.price\n\t\t\t\t\t\t)}`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span className=\"product-description\">{product.description}</span>\n\t\t\t\t\t<div className=\"shipped\">\n\t\t\t\t\t\t<i className=\"el-icon-message\" />\n\t\t\t\t\t\tShip via:\n\t\t\t\t\t\t{product.shipped ? \"Deliver\" : \"Email\"}\n\t\t\t\t\t</div>\n\t\t\t\t</Dialog.Body>\n\t\t\t\t<Dialog.Footer>\n\t\t\t\t\t{isOwner ? (\n\t\t\t\t\t\t<div className=\"owner-buttons\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\t\tonClick={() => setIsDialogOpen(true)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button type=\"danger\" icon=\"delete\" onClick={handleDelete} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"pay-button\">\n\t\t\t\t\t\t\t<PayButton product={product} user={user} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Dialog.Footer>\n\t\t\t</Dialog>\n\n\t\t\t{/* dialog to edit product */}\n\t\t\t<Dialog\n\t\t\t\ttitle=\"Edit Product\"\n\t\t\t\tvisible={isDialogOpen}\n\t\t\t\tonCancel={closeDialog}\n\t\t\t>\n\t\t\t\t<Dialog.Body>\n\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Form.Item label=\"Product Name\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={productName}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"product name\"\n\t\t\t\t\t\t\t\tonChange={handleProductNameChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Update Product Description\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Update Product Price\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tplaceholder=\"Price ($USD)\"\n\t\t\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\t\t\tonChange={handlePriceChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item label=\"Is the Product Shipped or Emailed to the Customer?\">\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tchecked={isShipped === true}\n\t\t\t\t\t\t\t\tvalue=\"Shipped\"\n\t\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShipped\n\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\tchecked={isShipped === false}\n\t\t\t\t\t\t\t\tvalue=\"Emailed\"\n\t\t\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEmailed\n\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item className=\"dialog-buttons\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tnativeType=\"submit\"\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t!description ||\n\t\t\t\t\t\t\t\t\t!price ||\n\t\t\t\t\t\t\t\t\tisShipped === undefined ||\n\t\t\t\t\t\t\t\t\tisUpdating\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={handleFormSubmit}\n\t\t\t\t\t\t\t\tloading={isUpdating}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={closeDialog}>Cancel</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</Dialog.Body>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/components/PayButton.js",["123"],"import { API, graphqlOperation } from \"aws-amplify\";\nimport { Message, Notification } from \"element-react\";\nimport React, { useContext } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { createOrder } from \"../graphql/mutations\";\n// import { IsLoadingContext } from \"../pages/MarketPage\";\nimport { getUser } from \"../graphql/queries\";\nimport { browserHistory } from \"../App\";\n\nconst stripeConfig = {\n\tcurrency: \"USD\",\n\tpublishableAPIKey:\n\t\t\"pk_test_51I0kZJHO14SglYyweDsZ0166SNqMHKjaWQnKS9Px3shOxp7KL1LCzVs2k8lxO5uSr77Y810hP23At0qacJr5r4qT00YIZoldhM\",\n};\n\nexport default function PayButton({ product, user }) {\n\tasync function getProductOwner() {\n\t\ttry {\n\t\t\tconst result = await API.graphql(\n\t\t\t\tgraphqlOperation(getUser, {\n\t\t\t\t\tid: product.owner,\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn result.data.getUser.email;\n\t\t} catch (err) {\n\t\t\tconsole.error(`Error fetching product owener`, err);\n\t\t}\n\t}\n\n\tasync function handleToken(token) {\n\t\tconst productOwnerEmail = await getProductOwner();\n\t\tconsole.log(productOwnerEmail);\n\t\tconsole.log(token);\n\t\ttry {\n\t\t\tconst result = await API.post(\"orderprocessor\", \"/charge\", {\n\t\t\t\tbody: {\n\t\t\t\t\ttoken,\n\t\t\t\t\tcharge: {\n\t\t\t\t\t\tcurrency: stripeConfig.currency,\n\t\t\t\t\t\tamount: product.price,\n\t\t\t\t\t\tdescription: product.description,\n\t\t\t\t\t\tproductOwnerEmail,\n\t\t\t\t\t\tshipped: product.shipped,\n\t\t\t\t\t\tcustomerEmail: user.user.attributes.email,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (result && result.charge.status === `succeeded`) {\n\t\t\t\t/* create order: graphql operation */\n\t\t\t\tconst shippingAddress = product.shipped\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tcity: result.charge.source.address_city,\n\t\t\t\t\t\t\tcountry: result.charge.source.address_country,\n\t\t\t\t\t\t\taddress_line1: result.charge.source.address_line1,\n\t\t\t\t\t\t\t// address_line2: result.charge.source.address_line2,\n\t\t\t\t\t\t\taddress_state: result.charge.source.address_state,\n\t\t\t\t\t\t\taddress_zip: result.charge.source.address_zip,\n\t\t\t\t\t  }\n\t\t\t\t\t: null;\n\n\t\t\t\tconst createOrderResult = await API.graphql(\n\t\t\t\t\tgraphqlOperation(createOrder, {\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\torderProductId: product.id,\n\t\t\t\t\t\t\tuserID: user.user.attributes.sub,\n\t\t\t\t\t\t\tshippingAddress,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tconsole.log(createOrderResult);\n\n\t\t\t\tNotification.success({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\tmessage: \"Purchase Success!\",\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbrowserHistory.push(\"/\");\n\t\t\t\t\tMessage({\n\t\t\t\t\t\tmessage: \"Check your verified email for order details\",\n\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\tshowClose: true,\n\t\t\t\t\t});\n\t\t\t\t}, 3000);\n\t\t\t} else {\n\t\t\t\tNotification.error({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\tmessage: \"Failed to Process Payment\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconsole.log(result);\n\t\t} catch (err) {\n\t\t\tconsole.error(`Error Handling Payment`, err);\n\t\t\tNotification.error({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tmessage: \"Failed to Process Payment\",\n\t\t\t});\n\t\t} finally {\n\t\t\t// setIsLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<StripeCheckout\n\t\t\ttoken={handleToken}\n\t\t\tname={product.description}\n\t\t\temail={user.user.attributes.email}\n\t\t\tamount={product.price}\n\t\t\tshippingAddress={product.shipped}\n\t\t\tbillingAddress={product.shipped}\n\t\t\talipay={true}\n\t\t\tlocale=\"auto\"\n\t\t\tcurrency={stripeConfig.currency}\n\t\t\tstripeKey={stripeConfig.publishableAPIKey}\n\t\t/>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/pages/HomePage2.js",["124"],"import React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { searchProducts, listProducts } from \"../graphql/queries\";\nimport ProductSearchInput from \"../components/ProductSearchInput\";\nimport Product from \"../components/Product\";\nimport { COMPARE_NOTES_CREATEDTIME_ASCENDING } from \"../utils\";\nimport { Button } from \"element-react\";\nimport ProductList from \"../components/ProductList\";\n\nexport default function HomePage() {\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\n\tconst [isSearchLoading, setIsSearchLoading] = useState(false);\n\tconst [searchResultList, setSearchResultList] = useState([]);\n\tconst [currentSearchTerm, setCurrentSearchTerm] = useState(\"\");\n\tconst [shouldShowAllProducts, setShouldShowAllProducts] = useState(true);\n\t/* new states */\n\tconst [allProductList, setAllProductList] = useState([]);\n\n\t/* Effect hook: get all the products */\n\tuseEffect(() => {\n\t\tfetchAllProducts();\n\t}, []);\n\n\tasync function fetchAllProducts() {\n\t\ttry {\n\t\t\tconst result = await API.graphql(graphqlOperation(listProducts));\n\t\t\tsetAllProductList(result.data.listProducts.items);\n\t\t} catch (err) {\n\t\t\tconsole.error(`Error fetching all the products`, err);\n\t\t}\n\t}\n\n\t/* graphql operation for searching market by name or tags */\n\tasync function handleSearchSubmit(event) {\n\t\tevent.preventDefault();\n\t\tsetIsSearchLoading(true);\n\t\ttry {\n\t\t\tconst searchResult = await API.graphql(\n\t\t\t\tgraphqlOperation(searchProducts, {\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\tname: { wildcard: `*${searchTerm}*` },\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tconsole.log(searchResult);\n\t\t\tsetSearchResultList(searchResult.data.searchProducts.items);\n\t\t\tsetCurrentSearchTerm(searchTerm);\n\t\t\tsetSearchTerm(\"\");\n\t\t\tsetShouldShowAllProducts(false);\n\t\t\tsetIsSearchLoading(false);\n\t\t} catch (err) {\n\t\t\tconsole.error(`Error searching product`, err);\n\t\t}\n\t}\n\n\tfunction showAllProducts() {\n\t\tsetShouldShowAllProducts(true);\n\t\tsetSearchResultList([]);\n\t}\n\n\tfunction renderProducts(products) {\n\t\treturn products.sort(COMPARE_NOTES_CREATEDTIME_ASCENDING).map((product) => {\n\t\t\treturn <Product key={product.id} product={product} />;\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<ProductSearchInput\n\t\t\t\tsearchTerm={searchTerm}\n\t\t\t\tsetSearchTerm={setSearchTerm}\n\t\t\t\thandleSearchSubmit={handleSearchSubmit}\n\t\t\t\tisSearchLoading={isSearchLoading}\n\t\t\t/>\n\t\t\t{shouldShowAllProducts ? (\n\t\t\t\t<ProductList products={allProductList} />\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<Button icon=\"arrow-left\" onClick={showAllProducts} />\n\t\t\t\t\t\t<span className=\"search-result-text\">\n\t\t\t\t\t\t\t{`showing search results for \"${currentSearchTerm}\": ${searchResultList.length} matching`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<ProductList products={searchResultList} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","/Users/Jun/Documents/FE projects/market-place/src/components/ProductSearchInput.js",[],"/Users/Jun/Documents/FE projects/market-place/src/components/ProductList.js",[],{"ruleId":"125","severity":1,"message":"126","line":4,"column":44,"nodeType":"127","messageId":"128","endLine":4,"endColumn":48},{"ruleId":"125","severity":1,"message":"129","line":24,"column":9,"nodeType":"127","messageId":"128","endLine":24,"endColumn":26},{"ruleId":"125","severity":1,"message":"130","line":24,"column":28,"nodeType":"127","messageId":"128","endLine":24,"endColumn":48},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"125","severity":1,"message":"135","line":1,"column":39,"nodeType":"127","messageId":"128","endLine":1,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":4,"column":2,"nodeType":"127","messageId":"128","endLine":4,"endColumn":6},{"ruleId":"125","severity":1,"message":"136","line":12,"column":15,"nodeType":"127","messageId":"128","endLine":12,"endColumn":31},{"ruleId":"131","replacedBy":"137"},{"ruleId":"133","replacedBy":"138"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":20},{"ruleId":"125","severity":1,"message":"139","line":2,"column":22,"nodeType":"127","messageId":"128","endLine":2,"endColumn":28},{"ruleId":"131","replacedBy":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"125","severity":1,"message":"142","line":2,"column":15,"nodeType":"127","messageId":"128","endLine":2,"endColumn":19},{"ruleId":"125","severity":1,"message":"143","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":15},{"ruleId":"125","severity":1,"message":"144","line":13,"column":10,"nodeType":"127","messageId":"128","endLine":13,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":62,"column":5,"nodeType":"147","endLine":62,"endColumn":7,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":142,"column":31,"nodeType":"151","messageId":"152","endLine":142,"endColumn":33},{"ruleId":"145","severity":1,"message":"153","line":158,"column":5,"nodeType":"147","endLine":158,"endColumn":13,"suggestions":"154"},{"ruleId":"125","severity":1,"message":"155","line":4,"column":2,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"125","severity":1,"message":"156","line":7,"column":10,"nodeType":"127","messageId":"128","endLine":7,"endColumn":23},{"ruleId":"125","severity":1,"message":"157","line":7,"column":25,"nodeType":"127","messageId":"128","endLine":7,"endColumn":34},{"ruleId":"158","severity":1,"message":"159","line":43,"column":4,"nodeType":"160","messageId":"161","endLine":51,"endColumn":5},{"ruleId":"131","replacedBy":"162"},{"ruleId":"133","replacedBy":"163"},{"ruleId":"125","severity":1,"message":"164","line":9,"column":2,"nodeType":"127","messageId":"128","endLine":9,"endColumn":10},{"ruleId":"125","severity":1,"message":"165","line":25,"column":9,"nodeType":"127","messageId":"128","endLine":25,"endColumn":23},{"ruleId":"125","severity":1,"message":"166","line":25,"column":25,"nodeType":"127","messageId":"128","endLine":25,"endColumn":42},{"ruleId":"125","severity":1,"message":"167","line":69,"column":10,"nodeType":"127","messageId":"128","endLine":69,"endColumn":20},{"ruleId":"125","severity":1,"message":"168","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"145","severity":1,"message":"169","line":71,"column":5,"nodeType":"147","endLine":71,"endColumn":18,"suggestions":"170"},{"ruleId":"125","severity":1,"message":"171","line":21,"column":18,"nodeType":"127","messageId":"128","endLine":21,"endColumn":28},{"ruleId":"125","severity":1,"message":"172","line":3,"column":17,"nodeType":"127","messageId":"128","endLine":3,"endColumn":27},{"ruleId":"125","severity":1,"message":"173","line":62,"column":11,"nodeType":"127","messageId":"128","endLine":62,"endColumn":25},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'currentSearchTerm' is assigned a value but never used.","'setCurrentSearchTerm' is assigned a value but never used.","no-native-reassign",["174"],"no-negated-in-lhs",["175"],"'useEffect' is defined but never used.","'graphqlOperation' is defined but never used.",["174"],["175"],"'Button' is defined but never used.",["174"],["175"],"'Auth' is defined but never used.","'Product' is defined but never used.","'COMPARE_NOTES_CREATEDTIME_ASCENDING' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMarket'. Either include it or remove the dependency array.","ArrayExpression",["176"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.attributes.sub'. Either include it or remove the dependency array.",["177"],"'AmplifyGreetings' is defined but never used.","'Authenticator' is defined but never used.","'Greetings' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["174"],["175"],"'Progress' is defined but never used.","'uploadProgress' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","'newProduct' is assigned a value but never used.","'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["178"],"'setIsOwner' is assigned a value but never used.","'useContext' is defined but never used.","'renderProducts' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [fetchMarket]",{"range":"185","text":"186"},"Update the dependencies array to be: [market, user.attributes.sub]",{"range":"187","text":"188"},"Update the dependencies array to be: [cognitoUser, getUserInfo]",{"range":"189","text":"190"},[1741,1743],"[fetchMarket]",[4261,4269],"[market, user.attributes.sub]",[1355,1368],"[cognitoUser, getUserInfo]"]